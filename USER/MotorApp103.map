Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    main.o(.text) refers to sbwt_work.o(.text) for init_sbwt()
    main.o(.text) refers to display.o(.text) for init_display()
    main.o(.text) refers to ebyte_lora.o(.text) for init_ebyte_lora()
    main.o(.text) refers to sbwt_modbus.o(.text) for init_sbwt_modbus()
    main.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.text) refers to misc.o(.text) for NVIC_PriorityGroupConfig
    main.o(.text) refers to stm32uart.o(.text) for uart1_init(unsigned)
    main.o(.text) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx) refers to main.o(.text) for .text
    ebyte_lora.o(.text) refers to stm32f10x_gpio.o(.text) for GPIO_WriteBit
    ebyte_lora.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphClockCmd
    ebyte_lora.o(.text) refers to stm32uart.o(.text) for get_myuart
    ebyte_lora.o(.text) refers to sbwt_work.o(.text) for dec_sbwt_group_liveTim(SBWT_INFO*, int, int)
    ebyte_lora.o(.text) refers to display.o(.text) for dmt_ctl(UART_INFO*, SBWT_BUFF_STRUCT*, unsigned)
    ebyte_lora.o(.text) refers to sbwt_transfer.o(.text) for SBWT_INFO::initTestSbwt()
    ebyte_lora.o(.text) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    ebyte_lora.o(.text) refers to aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor) for __aeabi_vec_ctor_nocookie_nodtor
    ebyte_lora.o(.text) refers to ebyte_lora.o(.data) for lorabuff
    ebyte_lora.o(.text) refers to ebyte_lora.o(.bss) for sbinfo_lora
    ebyte_lora.o(.text) refers to ebyte_lora.o(i._ZN9SBWT_INFOC1Ev) for SBWT_INFO::SBWT_INFO()
    ebyte_lora.o(.ARM.exidx) refers to ebyte_lora.o(.text) for .text
    ebyte_lora.o(.data) refers to ebyte_lora.o(.bss) for txbuff
    ebyte_lora.o(.init_array) refers to ebyte_lora.o(.text) for __sti___14_ebyte_lora_cpp_4c25969f
    ebyte_lora.o(.init_array) refers to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    mymodbus.o(.text) refers to mbcrc.o(.text) for usMBCRC16
    mymodbus.o(.ARM.exidx) refers to mymodbus.o(.text) for .text
    sbwt_modbus.o(.text) refers to stm32uart.o(.text) for get_myuart
    sbwt_modbus.o(.text) refers to mymodbus.o(.text) for ModBus_RTU::setRectorGroup(ModBus_rector*, int)
    sbwt_modbus.o(.text) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    sbwt_modbus.o(.text) refers to sbwt_modbus.o(.constdata__ZTV8myModBus) for vtable for myModBus
    sbwt_modbus.o(.text) refers to mymodbus.o(.constdata__ZTV10ModBus_RTU) for vtable for ModBus_RTU
    sbwt_modbus.o(.text) refers to sbwt_modbus.o(.data) for smr
    sbwt_modbus.o(.text) refers to sbwt_modbus.o(.bss) for thread1_stk_1
    sbwt_modbus.o(.text) refers to sbwt_modbus.o(.constdata__ZTV13ModBus_rector) for vtable for ModBus_rector
    sbwt_modbus.o(.text) refers to sbwt_modbus.o(.constdata__ZTV20sbwt_modbus_reactorf) for vtable for sbwt_modbus_reactorf
    sbwt_modbus.o(.ARM.exidx) refers to sbwt_modbus.o(.text) for .text
    sbwt_modbus.o(.init_array) refers to sbwt_modbus.o(.text) for __sti___15_sbwt_modbus_cpp_22c7b4b0
    sbwt_modbus.o(.init_array) refers to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    mbcrc.o(.text) refers to mbcrc.o(.constdata) for aucCRCHi
    stm32f10x_adc.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f10x_bkp.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_BackupResetCmd
    stm32f10x_gpio.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f10x_rcc.o(.text) refers to stm32f10x_rcc.o(.data) for APBAHBPrescTable
    stm32f10x_tim.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f10x_usart.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f10x_wwdg.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB1PeriphResetCmd
    stm32f10x_pwr.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB1PeriphResetCmd
    stm32uart.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphClockCmd
    stm32uart.o(.text) refers to stm32f10x_usart.o(.text) for USART_DeInit
    stm32uart.o(.text) refers to stm32f10x_gpio.o(.text) for GPIO_Init
    stm32uart.o(.text) refers to misc.o(.text) for NVIC_Init
    stm32uart.o(.text) refers to stm32uart.o(i._ZN13STM_UART_INFO12usart_handleEv) for STM_UART_INFO::usart_handle()
    stm32uart.o(.text) refers to stm32uart.o(i._ZN13STM_UART_INFOC1ER13USART_TypeDef) for STM_UART_INFO::STM_UART_INFO(USART_TypeDef&)
    stm32uart.o(.text) refers to stm32uart.o(.bss) for stmuart5
    stm32uart.o(.text) refers to stm32uart.o(.data) for cons
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(.text) for .text
    stm32uart.o(.data) refers to stm32uart.o(.bss) for stmuart1
    stm32uart.o(.init_array) refers to stm32uart.o(.text) for __sti___13_stm32uart_cpp_984db3e6
    stm32uart.o(.init_array) refers to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    sbwt_app.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    sbwt_app.o(.text) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    sbwt_app.o(.text) refers to _printf_dec.o(.text) for _printf_int_dec
    sbwt_app.o(.text) refers to __2printf.o(.text) for __2printf
    sbwt_app.o(.text) refers to sbwt_app.o(.constdata) for DataCodeGroup
    sbwt_app.o(.ARM.exidx) refers to sbwt_app.o(.text) for .text
    sbwt_app.o(.constdata) refers to sbwt_app.o(.text) for a48decode(TPack*, SBWT_INFO&)
    sbwt_transfer.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    sbwt_transfer.o(.text) refers to sbwt_app.o(.text) for checkAppData(TPack*, SBWT_INFO&)
    sbwt_transfer.o(.text) refers to sbwt_transfer.o(.constdata) for .constdata
    sbwt_transfer.o(.ARM.exidx) refers to sbwt_transfer.o(.text) for .text
    sbwt_work.o(.text) refers to stm32uart.o(.text) for get_myuart
    sbwt_work.o(.text) refers to display.o(.text) for dmt_ctl(UART_INFO*, SBWT_BUFF_STRUCT*, unsigned)
    sbwt_work.o(.text) refers to sbwt_transfer.o(.text) for SBWT_INFO::initTestSbwt()
    sbwt_work.o(.text) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    sbwt_work.o(.text) refers to ebyte_lora.o(.text) for GetSbwt_lora(int)
    sbwt_work.o(.text) refers to sbwt_work.o(i._ZN9SBWT_INFO8getAliveEv) for SBWT_INFO::getAlive()
    sbwt_work.o(.text) refers to aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor) for __aeabi_vec_ctor_nocookie_nodtor
    sbwt_work.o(.text) refers to sbwt_work.o(.data) for buff485
    sbwt_work.o(.text) refers to sbwt_work.o(.bss) for sbinfo
    sbwt_work.o(.text) refers to ebyte_lora.o(i._ZN9SBWT_INFOC1Ev) for SBWT_INFO::SBWT_INFO()
    sbwt_work.o(.ARM.exidx) refers to sbwt_work.o(.text) for .text
    sbwt_work.o(.data) refers to sbwt_work.o(.bss) for txbuff
    sbwt_work.o(.init_array) refers to sbwt_work.o(.text) for __sti___13_sbwt_work_cpp_bb3b508d
    sbwt_work.o(.init_array) refers to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    display.o(.text) refers to _printf_pad.o(.text) for _printf_pre_padding
    display.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    display.o(.text) refers to _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) for _printf_x
    display.o(.text) refers to _printf_hex_int.o(.text) for _printf_longlong_hex
    display.o(.text) refers to dmt.o(.text) for DMT::SP_Work(UART_INFO*, SBWT_BUFF_STRUCT*, unsigned)
    display.o(.text) refers to display.o(i._ZN9SBWT_INFO7GetDataEi) for SBWT_INFO::GetData(int)
    display.o(.text) refers to __2sprintf.o(.text) for __2sprintf
    display.o(.text) refers to dmt_uart.o(.text) for DMT::write_data(int, void*, int&)
    display.o(.text) refers to stm32uart.o(.text) for get_myuart
    display.o(.text) refers to sbwt_work.o(.text) for GetSbwt_all(int)
    display.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    display.o(.text) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    display.o(.text) refers to display.o(.bss) for dmt1
    display.o(.text) refers to display.o(.constdata) for <Data1>
    display.o(.ARM.exidx) refers to display.o(.text) for .text
    display.o(.init_array) refers to display.o(.text) for __sti___11_display_cpp_dmt1
    display.o(.init_array) refers to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    dmt.o(.text) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    dmt.o(.text) refers to dmt_uart.o(.text) for dmt_unpack_buff(DMT_UART_DATA_STRUCT*, unsigned char*, int, int)
    dmt.o(.text) refers to dmt.o(i._ZN9SBWT_INFO4initEP9UART_INFOjP16SBWT_BUFF_STRUCT) for SBWT_INFO::init(UART_INFO*, unsigned, SBWT_BUFF_STRUCT*)
    dmt.o(.text) refers to sbwt_transfer.o(.text) for SBWT_INFO::initSBWT()
    dmt.o(.text) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    dmt.o(.text) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    dmt.o(.text) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    dmt.o(.text) refers to dmt.o(.bss) for thread_rec_stk_1
    dmt.o(.ARM.exidx) refers to dmt.o(.text) for .text
    dmt_uart.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    dmt_uart.o(.text) refers to dmt.o(.text) for DMT::set_pro(int(*)(void*, DMT_UART_DATA_STRUCT*), void*)
    dmt_uart.o(.ARM.exidx) refers to dmt_uart.o(.text) for .text
    rtx_lib.o(.text) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.text) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_lib.o(.text) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.text) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.text) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.text) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.text) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    retarget_io.o(.text) refers to strcmpv7m.o(.text) for strcmp
    retarget_io.o(.text) refers to retarget_io.o(.data) for ITM_RxBuffer
    startup_stm32f10x_hd.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(STACK) for __initial_sp
    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(.text) for Reset_Handler
    startup_stm32f10x_hd.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_stm32f10x_hd.o(RESET) refers to stm32uart.o(.text) for USART1_IRQHandler
    startup_stm32f10x_hd.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(.text) refers to system_stm32f10x.o(.text) for SystemInit
    startup_stm32f10x_hd.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_hd.o(.text) refers to startup_stm32f10x_hd.o(HEAP) for Heap_Mem
    startup_stm32f10x_hd.o(.text) refers to startup_stm32f10x_hd.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text) refers to system_stm32f10x.o(.data) for SystemCoreClock
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm3.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f10x.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f10x.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    __2printf.o(.text) refers to _printf_char_file_locked.o(.text) for _printf_char_file
    __2printf.o(.text) refers to stdio_streams.o(.bss) for __stdout
    __2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2printf.o(.text) refers to _printf_char_file_locked.o(.text) for _printf_char_file
    noretval__2printf.o(.text) refers to stdio_streams.o(.bss) for __stdout
    noretval__2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll.o(.text) refers to _printf_hex_ll.o(.constdata) for .constdata
    _printf_hex_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int.o(.text) refers to _printf_hex_int.o(.constdata) for .constdata
    _printf_hex_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll.o(.text) refers to _printf_hex_int_ll.o(.constdata) for .constdata
    _printf_hex_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ptr.o(.text) refers to _printf_hex_ptr.o(.constdata) for .constdata
    _printf_hex_int_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ptr.o(.text) refers to _printf_hex_int_ptr.o(.constdata) for .constdata
    _printf_hex_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll_ptr.o(.text) refers to _printf_hex_ll_ptr.o(.constdata) for .constdata
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_hex_int_ll_ptr.o(.constdata) for .constdata
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) refers (Weak) to _printf_hex_int.o(.text) for _printf_int_hex
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    init_aeabi.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_cpp_2
    init_aeabi.o(.init_array) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_cpp_2
    init_aeabi.o(.init_array) refers to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    init_aeabi.o(.dummy_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_cpp_2
    init_aeabi.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers to init_aeabi.o(.text) for .text
    pure_virt.o(i.__cxa_pure_virtual) refers to defsig_pvfn_outer.o(.text) for __rt_SIGPVFN
    pure_virt.o(.ARM.exidx) refers to pure_virt.o(i.__cxa_pure_virtual) for i.__cxa_pure_virtual
    lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD1Ev) for __cxxabiv1::__enum_type_info::~__enum_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD1Ev) for __cxxabiv1::__array_type_info::~__array_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) for __cxxabiv1::__pointer_type_info::~__pointer_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD1Ev) for __cxxabiv1::__function_type_info::~__function_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) for __cxxabiv1::__si_class_type_info::~__si_class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) for __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD1Ev) for __cxxabiv1::__fundamental_type_info::~__fundamental_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) for __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD1Ev) for i._ZN10__cxxabiv123__fundamental_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD0Ev) for i._ZN10__cxxabiv123__fundamental_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD1Ev) for i._ZN10__cxxabiv117__array_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD0Ev) for i._ZN10__cxxabiv117__array_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD1Ev) for i._ZN10__cxxabiv120__function_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD0Ev) for i._ZN10__cxxabiv120__function_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD1Ev) for i._ZN10__cxxabiv116__enum_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD0Ev) for i._ZN10__cxxabiv116__enum_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for i._ZN10__cxxabiv117__class_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD0Ev) for i._ZN10__cxxabiv117__class_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) for i._ZN10__cxxabiv120__si_class_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD0Ev) for i._ZN10__cxxabiv120__si_class_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) for i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev) for i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for i._ZN10__cxxabiv117__pbase_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD0Ev) for i._ZN10__cxxabiv117__pbase_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) for i._ZN10__cxxabiv119__pointer_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD0Ev) for i._ZN10__cxxabiv119__pointer_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) for i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev) for i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev
    aeabi_vec_ctor_nocookie_nodtor.o(.ARM.exidx) refers to aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor) for i.__aeabi_vec_ctor_nocookie_nodtor
    aeabi_vec_ctor_nocookie_nodtor.o(.ARM.exidx) refers to unwind_pr0.o(.text) for __aeabi_unwind_cpp_pr0
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_char_common.o(.text) refers to __printf_flags_wp.o(.text) for __printf
    _printf_char_file.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file.o(.text) refers to ferror_locked.o(.text) for ferror
    _printf_char_file.o(.text) refers to fputc_locked.o(.text) for fputc
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    defsig_pvfn_outer.o(.text) refers to defsig_pvfn_inner.o(.text) for __rt_SIGPVFN_inner
    defsig_pvfn_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_pvfn_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit2.o(.ARM.Collect$$libinit$$00000005) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers (Weak) to initio_locked.o(.text) for _initio
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000031) refers (Weak) to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    type_info_dtor.o(.ARM.exidx) refers to type_info_dtor.o(i._ZNSt9type_infoD1Ev) for i._ZNSt9type_infoD1Ev
    type_info_dtor.o(.ARM.exidx) refers to type_info_dtor.o(i._ZNSt9type_infoD0Ev) for i._ZNSt9type_infoD0Ev
    arm_exceptions_callterm.o(.text) refers to arm_exceptions_globs.o(.text) for __cxa_get_globals
    arm_exceptions_callterm.o(.text) refers to arm_exceptions_support.o(.text) for __ARM::is_foreign_exception(_Unwind_Control_Block*)
    arm_exceptions_callterm.o(.text) refers to arm_exceptions_terminate.o(.text) for std::terminate()
    arm_exceptions_callterm.o(.ARM.exidx) refers to arm_exceptions_callterm.o(.text) for .text
    unwind_pr0.o(.text) refers to unwind_prcommon.o(.text) for __ARM_unwind_cpp_prcommon
    unwind_pr0.o(.ARM.exidx) refers to unwind_pr0.o(.text) for .text
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    fputc.o(i.fputc) refers to flsbuf.o(.text) for __flsbuf_byte
    initio.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000024) for __rt_lib_init_stdio_2
    initio.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio.o(.text) refers to fopen_locked.o(.text) for freopen
    initio.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio.o(.text) refers to h1_free_mt.o(.text) for free
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio.o(.text) refers to retarget_io.o(.constdata) for __stdin_name
    fputc_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    fputc_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputc_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    ferror_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    ferror_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    initio_locked.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000024) for __rt_lib_init_stdio_2
    initio_locked.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio_locked.o(.text) refers to rtx_lib.o(.text) for _mutex_initialize
    initio_locked.o(.text) refers to fopen_locked.o(.text) for freopen
    initio_locked.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio_locked.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    initio_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_free
    initio_locked.o(.text) refers to h1_free_mt.o(.text) for free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_free
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    initio_locked.o(.text) refers to retarget_io.o(.constdata) for __stdin_name
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    arm_begincatch_noexceptions.o(.ARM.exidx) refers to arm_begincatch_noexceptions.o(.text) for .text
    arm_exceptions_terminate.o(.text) refers to arm_exceptions_globs.o(.text) for __cxa_get_globals
    arm_exceptions_terminate.o(.text) refers to abort.o(.text) for abort
    arm_exceptions_terminate.o(.ARM.exidx) refers to arm_exceptions_terminate.o(.text) for .text
    arm_exceptions_support.o(.text) refers to arm_exceptions_support.o(.constdata) for .constdata
    arm_exceptions_support.o(.ARM.exidx) refers to arm_exceptions_support.o(.text) for .text
    arm_exceptions_globs.o(.text) refers to abort.o(.text) for abort
    arm_exceptions_globs.o(.text) refers to rt_eh_globals_addr_twolibspace.o(.text) for __rt_eh_globals_addr
    arm_exceptions_globs.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    arm_exceptions_globs.o(.text) refers to arm_exceptions_mem.o(.text) for __ARM_exceptions_buffer_init
    arm_exceptions_globs.o(.ARM.exidx) refers to arm_exceptions_globs.o(.text) for .text
    unwind_prcommon.o(.text) refers to unwinder.o(.text) for _Unwind_VRS_Get
    unwind_prcommon.o(.text) refers to unwind_activity.o(.emb_text) for _Unwind_Activity
    unwind_prcommon.o(.ARM.exidx) refers to unwind_prcommon.o(.text) for .text
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_hd.o(.text) for __user_initial_stackheap
    rt_eh_globals_addr.o(.text) refers to rt_eh_globals_addr.o(.bss) for __rt_eh_globals_addr_data
    rt_eh_globals_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_eh_globals_addr_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init_mt.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc_mt.o(.text) refers (Special) to h1_init_mt.o(.text) for __Heap_Initialize
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    h1_alloc_mt.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    h1_alloc_mt.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_free_mt.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    h1_free_mt.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    h1_free_mt.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.___Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i._free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to h1_free_mt.o(.text) for free
    heap2.o(i._realloc$realtime) refers to h1_alloc_mt.o(.text) for malloc
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._FDIterate) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i.___Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_free
    heap2mt.o(i.___Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(.text) for _mutex_initialize
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers to heap2mt.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(i._FDIterate) for _FDIterate
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i._free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    heap2mt.o(i._malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_free_mt.o(.text) for free
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_alloc_mt.o(.text) for malloc
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    flsbuf.o(.text) refers to stdio.o(.text) for _deferredlazyseek
    flsbuf.o(.text) refers to retarget_io.o(.text) for _sys_flen
    flsbuf.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    streamlock.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    fopen.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen.o(.text) refers to retarget_io.o(.text) for _sys_open
    fopen.o(.text) refers to fseek.o(.text) for _fseek
    fopen.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    fopen.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fclose.o(.text) refers to stdio.o(.text) for _fflush
    fclose.o(.text) refers to retarget_io.o(.text) for _sys_close
    fclose.o(.text) refers to h1_free_mt.o(.text) for free
    fclose.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    fopen_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen_locked.o(.text) refers to retarget_io.o(.text) for _sys_open
    fopen_locked.o(.text) refers to fseek.o(.text) for _fseek
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    fopen_locked.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    fopen_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen_locked.o(.text) refers to rtx_lib.o(.text) for _mutex_initialize
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    fopen_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fopen_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtred_outer.o(.text) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig_rtred_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtred_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) refers (Weak) to initio_locked.o(.text) for _terminateio
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    flsbuf_fwide.o(.text) refers to flsbuf.o(.text) for __flsbuf
    arm_exceptions_mem.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    arm_exceptions_mem.o(.ARM.exidx) refers to arm_exceptions_mem.o(.text) for .text
    unwinder.o(.emb_text) refers to unwinder.o(.text) for __ARM_Unwind_RaiseException
    unwinder.o(.text) refers to bsearchnoex.o(.text) for bsearch
    unwinder.o(.text) refers to unwind_activity.o(.emb_text) for _Unwind_Activity
    unwinder.o(.text) refers to abort.o(.text) for abort
    unwinder.o(.text) refers to unwinder.o(.emb_text) for __ARM_Unwind_VRS_corerestore
    unwinder.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    unwinder.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    unwinder.o(.text) refers to h1_free_mt.o(.text) for free
    unwinder.o(.text) refers (Weak) to unwind_pr0.o(.text) for __aeabi_unwind_cpp_pr0
    unwinder.o(.ARM.exidx) refers to unwinder.o(.text) for .text
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000005) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.emb_text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_mt.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_mt.o(.text) for __Heap_Initialize
    h1_init_mt.o(.text) refers to rtx_lib.o(.text) for _mutex_initialize
    _printf_char_file_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    _printf_char_file_locked.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    _printf_char_file_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fseek.o(.text) refers to retarget_io.o(.text) for _sys_istty
    fseek.o(.text) refers to ftell.o(.text) for _ftell_internal
    fseek.o(.text) refers to stdio.o(.text) for _seterr
    stdio.o(.text) refers to retarget_io.o(.text) for _sys_seek
    fwritefast.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fwritefast_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    fwritefast_locked.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast_locked.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    fwritefast_locked.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig.o(CL$$defsig) refers to defsig_pvfn_inner.o(.text) for __rt_SIGPVFN_inner
    assert_stdio.o(.text) refers to fputs_locked.o(.text) for fputs
    assert_stdio.o(.text) refers to fflush_locked.o(.text) for fflush
    assert_stdio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    maybetermalloc2.o(.emb_text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_mt.o(.text) for free
    h1_extend_mt.o(.text) refers to h1_free_mt.o(.text) for _free_internal
    fflush.o(.text) refers to stdio.o(.text) for _fflush
    fflush.o(.text) refers to fseek.o(.text) for _fseek
    fflush.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fputs.o(.text) refers to fputc_locked.o(.text) for fputc
    ftell.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fputs_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    fputs_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputs_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    fflush_locked.o(.text) refers to stdio.o(.text) for _fflush
    fflush_locked.o(.text) refers to fseek.o(.text) for _fseek
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_acquire
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_release
    fflush_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fflush_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(.text) for __user_perthread_libspace
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_mt.o(.text) for __Heap_Finalize
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    h1_final_mt.o(.text) refers (Weak) to rtx_lib.o(.text) for _mutex_free
    ebyte_lora.o(.ARM.exidx) refers to ebyte_lora.o(i._ZN9SBWT_INFOC1Ev) for i._ZN9SBWT_INFOC1Ev
    mymodbus.o(.constdata__ZTV10ModBus_RTU) refers to mymodbus.o(.constdata__ZTI10ModBus_RTU) for typeinfo for ModBus_RTU
    mymodbus.o(.constdata__ZTV10ModBus_RTU) refers to mymodbus.o(.text) for ModBus_RTU::proRec(unsigned char*, unsigned, unsigned char*, unsigned)
    mymodbus.o(.constdata__ZTI10ModBus_RTU) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    mymodbus.o(.constdata__ZTI10ModBus_RTU) refers to mymodbus.o(.constdata__ZTS10ModBus_RTU) for typeinfo name for ModBus_RTU
    mymodbus.o(.constdata__ZTI10ModBus_RTU) refers to mymodbus.o(.constdata__ZTI8myModBus) for typeinfo for myModBus
    mymodbus.o(.constdata__ZTI8myModBus) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    mymodbus.o(.constdata__ZTI8myModBus) refers to mymodbus.o(.constdata__ZTS8myModBus) for typeinfo name for myModBus
    sbwt_modbus.o(.constdata__ZTV8myModBus) refers to mymodbus.o(.constdata__ZTI8myModBus) for typeinfo for myModBus
    sbwt_modbus.o(.constdata__ZTV8myModBus) refers to pure_virt.o(i.__cxa_pure_virtual) for __cxa_pure_virtual
    sbwt_modbus.o(.constdata__ZTV13ModBus_rector) refers to sbwt_modbus.o(.constdata__ZTI13ModBus_rector) for typeinfo for ModBus_rector
    sbwt_modbus.o(.constdata__ZTV13ModBus_rector) refers to pure_virt.o(i.__cxa_pure_virtual) for __cxa_pure_virtual
    sbwt_modbus.o(.constdata__ZTV20sbwt_modbus_reactorf) refers to sbwt_modbus.o(.constdata__ZTI20sbwt_modbus_reactorf) for typeinfo for sbwt_modbus_reactorf
    sbwt_modbus.o(.constdata__ZTV20sbwt_modbus_reactorf) refers to sbwt_modbus.o(i._ZN20sbwt_modbus_reactorf4codeEv) for sbwt_modbus_reactorf::code()
    sbwt_modbus.o(.constdata__ZTV20sbwt_modbus_reactorf) refers to sbwt_modbus.o(i._ZN20sbwt_modbus_reactorf7prodataEPhiS0_j) for sbwt_modbus_reactorf::prodata(unsigned char*, int, unsigned char*, unsigned)
    sbwt_modbus.o(.constdata__ZTI13ModBus_rector) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    sbwt_modbus.o(.constdata__ZTI13ModBus_rector) refers to sbwt_modbus.o(.constdata__ZTS13ModBus_rector) for typeinfo name for ModBus_rector
    sbwt_modbus.o(.constdata__ZTI20sbwt_modbus_reactorf) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    sbwt_modbus.o(.constdata__ZTI20sbwt_modbus_reactorf) refers to sbwt_modbus.o(.constdata__ZTS20sbwt_modbus_reactorf) for typeinfo name for sbwt_modbus_reactorf
    sbwt_modbus.o(.constdata__ZTI20sbwt_modbus_reactorf) refers to sbwt_modbus.o(.constdata__ZTI13ModBus_rector) for typeinfo for ModBus_rector
    sbwt_modbus.o(.ARM.exidx) refers to sbwt_modbus.o(i._ZN20sbwt_modbus_reactorf4codeEv) for i._ZN20sbwt_modbus_reactorf4codeEv
    sbwt_modbus.o(i._ZN20sbwt_modbus_reactorf7prodataEPhiS0_j) refers to sbwt_work.o(.text) for GetSbwt_all(int)
    sbwt_modbus.o(.ARM.exidx) refers to sbwt_modbus.o(i._ZN20sbwt_modbus_reactorf7prodataEPhiS0_j) for i._ZN20sbwt_modbus_reactorf7prodataEPhiS0_j
    stm32uart.o(i._ZN13STM_UART_INFO12usart_handleEv) refers to stm32f10x_usart.o(.text) for USART_GetITStatus
    stm32uart.o(i._ZN13STM_UART_INFO12usart_handleEv) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO12usart_handleEv) for i._ZN13STM_UART_INFO12usart_handleEv
    stm32uart.o(i._ZN13STM_UART_INFOC1ER13USART_TypeDef) refers to stm32uart.o(.constdata__ZTV9UART_INFO) for vtable for UART_INFO
    stm32uart.o(i._ZN13STM_UART_INFOC1ER13USART_TypeDef) refers to stm32uart.o(.constdata__ZTV13STM_UART_INFO) for vtable for STM_UART_INFO
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFOC1ER13USART_TypeDef) for i._ZN13STM_UART_INFOC1ER13USART_TypeDef
    stm32uart.o(.constdata__ZTV9UART_INFO) refers to stm32uart.o(.constdata__ZTI9UART_INFO) for typeinfo for UART_INFO
    stm32uart.o(.constdata__ZTV9UART_INFO) refers to pure_virt.o(i.__cxa_pure_virtual) for __cxa_pure_virtual
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(.constdata__ZTI13STM_UART_INFO) for typeinfo for STM_UART_INFO
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO4openEi) for STM_UART_INFO::open(int)
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO4sendEPhj) for STM_UART_INFO::send(unsigned char*, unsigned)
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO4receEPhj) for STM_UART_INFO::rece(unsigned char*, unsigned)
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO9wait_receEjj) for STM_UART_INFO::wait_rece(unsigned, unsigned)
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO13wait_send_endEv) for STM_UART_INFO::wait_send_end()
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO10checkTXCPLEv) for STM_UART_INFO::checkTXCPL()
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO10checkRXCPLEv) for STM_UART_INFO::checkRXCPL()
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO6stopTXEv) for STM_UART_INFO::stopTX()
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO6stopRXEv) for STM_UART_INFO::stopRX()
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO8GetTxNumEv) for STM_UART_INFO::GetTxNum()
    stm32uart.o(.constdata__ZTV13STM_UART_INFO) refers to stm32uart.o(i._ZN13STM_UART_INFO8GetRxNumEv) for STM_UART_INFO::GetRxNum()
    stm32uart.o(.constdata__ZTI13STM_UART_INFO) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    stm32uart.o(.constdata__ZTI13STM_UART_INFO) refers to stm32uart.o(.constdata__ZTS13STM_UART_INFO) for typeinfo name for STM_UART_INFO
    stm32uart.o(.constdata__ZTI13STM_UART_INFO) refers to stm32uart.o(.constdata__ZTI9UART_INFO) for typeinfo for UART_INFO
    stm32uart.o(.constdata__ZTI9UART_INFO) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    stm32uart.o(.constdata__ZTI9UART_INFO) refers to stm32uart.o(.constdata__ZTS9UART_INFO) for typeinfo name for UART_INFO
    stm32uart.o(i._ZN13STM_UART_INFO4sendEPhj) refers to stm32f10x_usart.o(.text) for USART_ITConfig
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO4sendEPhj) for i._ZN13STM_UART_INFO4sendEPhj
    stm32uart.o(i._ZN13STM_UART_INFO4receEPhj) refers to stm32f10x_usart.o(.text) for USART_ITConfig
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO4receEPhj) for i._ZN13STM_UART_INFO4receEPhj
    stm32uart.o(i._ZN13STM_UART_INFO9wait_receEjj) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    stm32uart.o(i._ZN13STM_UART_INFO9wait_receEjj) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO9wait_receEjj) for i._ZN13STM_UART_INFO9wait_receEjj
    stm32uart.o(i._ZN13STM_UART_INFO13wait_send_endEv) refers to rtx_delay.o(.text.osDelay) for osDelay
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO13wait_send_endEv) for i._ZN13STM_UART_INFO13wait_send_endEv
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO10checkTXCPLEv) for i._ZN13STM_UART_INFO10checkTXCPLEv
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO10checkRXCPLEv) for i._ZN13STM_UART_INFO10checkRXCPLEv
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO6stopTXEv) for i._ZN13STM_UART_INFO6stopTXEv
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO6stopRXEv) for i._ZN13STM_UART_INFO6stopRXEv
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO8GetRxNumEv) for i._ZN13STM_UART_INFO8GetRxNumEv
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO8GetTxNumEv) for i._ZN13STM_UART_INFO8GetTxNumEv
    stm32uart.o(.ARM.exidx) refers to stm32uart.o(i._ZN13STM_UART_INFO4openEi) for i._ZN13STM_UART_INFO4openEi
    sbwt_work.o(.ARM.exidx) refers to sbwt_work.o(i._ZN9SBWT_INFO8getAliveEv) for i._ZN9SBWT_INFO8getAliveEv
    display.o(.ARM.exidx) refers to display.o(i._ZN9SBWT_INFO7GetDataEi) for i._ZN9SBWT_INFO7GetDataEi
    dmt.o(.ARM.exidx) refers to dmt.o(i._ZN9SBWT_INFO4initEP9UART_INFOjP16SBWT_BUFF_STRUCT) for i._ZN9SBWT_INFO4initEP9UART_INFOjP16SBWT_BUFF_STRUCT
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) for typeinfo for __cxxabiv1::__fundamental_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD1Ev) for __cxxabiv1::__fundamental_type_info::~__fundamental_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD0Ev) for __cxxabiv1::__fundamental_type_info::~__fundamental_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) for typeinfo for __cxxabiv1::__array_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD1Ev) for __cxxabiv1::__array_type_info::~__array_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD0Ev) for __cxxabiv1::__array_type_info::~__array_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) for typeinfo for __cxxabiv1::__function_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD1Ev) for __cxxabiv1::__function_type_info::~__function_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD0Ev) for __cxxabiv1::__function_type_info::~__function_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) for typeinfo for __cxxabiv1::__enum_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD1Ev) for __cxxabiv1::__enum_type_info::~__enum_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD0Ev) for __cxxabiv1::__enum_type_info::~__enum_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) for typeinfo for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD0Ev) for __cxxabiv1::__class_type_info::~__class_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) for typeinfo for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) for __cxxabiv1::__si_class_type_info::~__si_class_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD0Ev) for __cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) for typeinfo for __cxxabiv1::__vmi_class_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) for __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev) for __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) for typeinfo for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD0Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) for typeinfo for __cxxabiv1::__pointer_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) for __cxxabiv1::__pointer_type_info::~__pointer_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD0Ev) for __cxxabiv1::__pointer_type_info::~__pointer_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) for typeinfo for __cxxabiv1::__pointer_to_member_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) for __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev) for __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info__deallocating()
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZNSt9type_infodlEPv) for i._ZNSt9type_infodlEPv
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv123__fundamental_type_infoE) for typeinfo name for __cxxabiv1::__fundamental_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv117__array_type_infoE) for typeinfo name for __cxxabiv1::__array_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv120__function_type_infoE) for typeinfo name for __cxxabiv1::__function_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv116__enum_type_infoE) for typeinfo name for __cxxabiv1::__enum_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv117__class_type_infoE) for typeinfo name for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv120__si_class_type_infoE) for typeinfo name for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) for typeinfo for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv121__vmi_class_type_infoE) for typeinfo name for __cxxabiv1::__vmi_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) for typeinfo for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv117__pbase_type_infoE) for typeinfo name for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv119__pointer_type_infoE) for typeinfo name for __cxxabiv1::__pointer_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) for typeinfo for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv129__pointer_to_member_type_infoE) for typeinfo name for __cxxabiv1::__pointer_to_member_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) for typeinfo for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(i.__ARM_common_noexcept_landing) refers to arm_exceptions_callterm.o(.text) for __cxa_call_terminate
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i.__ARM_common_noexcept_landing) for i.__ARM_common_noexcept_landing
    type_info_dtor.o(.constdata__ZTVSt9type_info) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    type_info_dtor.o(.constdata__ZTVSt9type_info) refers to type_info_dtor.o(i._ZNSt9type_infoD1Ev) for std::type_info::~type_info()
    type_info_dtor.o(.constdata__ZTVSt9type_info) refers to type_info_dtor.o(i._ZNSt9type_infoD0Ev) for std::type_info::~type_info__deallocating()
    type_info_dtor.o(.constdata__ZTISt9type_info) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    type_info_dtor.o(.constdata__ZTISt9type_info) refers to type_info_dtor.o(.constdata__ZTSSt9type_info) for typeinfo name for std::type_info


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.ARM.exidx), (8 bytes).
    Removing ebyte_lora.o(.ARM.exidx), (8 bytes).
    Removing mymodbus.o(.ARM.exidx), (8 bytes).
    Removing sbwt_modbus.o(.ARM.exidx), (8 bytes).
    Removing stm32f10x_adc.o(.text), (1102 bytes).
    Removing stm32f10x_bkp.o(.text), (196 bytes).
    Removing stm32f10x_crc.o(.text), (72 bytes).
    Removing stm32f10x_dbgmcu.o(.text), (48 bytes).
    Removing stm32f10x_dma.o(.text), (596 bytes).
    Removing stm32f10x_exti.o(.text), (284 bytes).
    Removing stm32f10x_flash.o(.text), (1468 bytes).
    Removing stm32f10x_iwdg.o(.text), (64 bytes).
    Removing stm32f10x_rtc.o(.text), (348 bytes).
    Removing stm32f10x_tim.o(.text), (3610 bytes).
    Removing stm32f10x_wwdg.o(.text), (136 bytes).
    Removing stm32f10x_fsmc.o(.text), (1548 bytes).
    Removing stm32f10x_pwr.o(.text), (204 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing sbwt_app.o(.ARM.exidx), (8 bytes).
    Removing sbwt_transfer.o(.ARM.exidx), (8 bytes).
    Removing sbwt_work.o(.ARM.exidx), (8 bytes).
    Removing display.o(.ARM.exidx), (8 bytes).
    Removing dmt.o(.ARM.exidx), (8 bytes).
    Removing dmt_uart.o(.ARM.exidx), (8 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (140 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (140 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (192 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (124 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (332 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (48 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (174 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing ebyte_lora.o(.ARM.exidx), (8 bytes).
    Removing mymodbus.o(.constdata__ZTI10ModBus_RTU), (12 bytes).
    Removing mymodbus.o(.constdata__ZTI8myModBus), (8 bytes).
    Removing mymodbus.o(.constdata__ZTS10ModBus_RTU), (13 bytes).
    Removing mymodbus.o(.constdata__ZTS8myModBus), (10 bytes).
    Removing sbwt_modbus.o(.constdata__ZTI13ModBus_rector), (8 bytes).
    Removing sbwt_modbus.o(.constdata__ZTI20sbwt_modbus_reactorf), (12 bytes).
    Removing sbwt_modbus.o(.constdata__ZTS13ModBus_rector), (16 bytes).
    Removing sbwt_modbus.o(.constdata__ZTS20sbwt_modbus_reactorf), (23 bytes).
    Removing sbwt_modbus.o(.ARM.exidx), (8 bytes).
    Removing sbwt_modbus.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(.constdata__ZTI13STM_UART_INFO), (12 bytes).
    Removing stm32uart.o(.constdata__ZTI9UART_INFO), (8 bytes).
    Removing stm32uart.o(.constdata__ZTS9UART_INFO), (11 bytes).
    Removing stm32uart.o(.constdata__ZTS13STM_UART_INFO), (16 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(i._ZN13STM_UART_INFO10checkRXCPLEv), (14 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(i._ZN13STM_UART_INFO6stopTXEv), (6 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(i._ZN13STM_UART_INFO8GetTxNumEv), (6 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing stm32uart.o(i._ZN13STM_UART_INFO4openEi), (6 bytes).
    Removing stm32uart.o(.ARM.exidx), (8 bytes).
    Removing sbwt_work.o(.ARM.exidx), (8 bytes).
    Removing display.o(.ARM.exidx), (8 bytes).
    Removing dmt.o(.ARM.exidx), (8 bytes).

368 unused section(s) (total 16875 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../../clib/unwind_pr.c                0x00000000   Number         0  unwind_pr0.o ABSOLUTE
    ../../../clib/unwind_pr.c                0x00000000   Number         0  unwind_prcommon.o ABSOLUTE
    ../../../clib/unwinder.c                 0x00000000   Number         0  unwinder.o ABSOLUTE
    ../../../clib/unwinder.c                 0x00000000   Number         0  unwinder.o ABSOLUTE
    ../../../clib/unwinder.c                 0x00000000   Number         0  unwind_activity.o ABSOLUTE
    ../../../clib/unwinder.c                 0x00000000   Number         0  unwind_activity.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_terminate.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_mem.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_support.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_globs.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_callterm.o ABSOLUTE
    ../../../edgfe/lib_src/arm_noexceptions.c 0x00000000   Number         0  arm_begincatch_noexceptions.o ABSOLUTE
    ../../../edgfe/lib_src/pure_virt.c       0x00000000   Number         0  pure_virt.o ABSOLUTE
    ../../../edgfe/lib_src/typeinfo.c        0x00000000   Number         0  type_info_dtor.o ABSOLUTE
    ../../../edgfe/lib_src/typeinfo.c        0x00000000   Number         0  lib_rtti_impl.o ABSOLUTE
    ../../array_helpers.cpp                  0x00000000   Number         0  aeabi_vec_ctor_nocookie_nodtor.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/dczerorl2.s                0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_eh_globals_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_eh_globals_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_eh_globals_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/assert.c                         0x00000000   Number         0  assert_stdio.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_mt.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2mt.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file_locked.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_x.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ftell.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio_streams.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fclose.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  streamlock.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fseek.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  flsbuf.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  bsearchnoex.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abort.o ABSOLUTE
    ../clib/wchar.c                          0x00000000   Number         0  flsbuf_fwide.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    ..\FWLIB\src\misc.c                      0x00000000   Number         0  misc.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_adc.c             0x00000000   Number         0  stm32f10x_adc.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_bkp.c             0x00000000   Number         0  stm32f10x_bkp.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_crc.c             0x00000000   Number         0  stm32f10x_crc.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_dbgmcu.c          0x00000000   Number         0  stm32f10x_dbgmcu.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_dma.c             0x00000000   Number         0  stm32f10x_dma.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_exti.c            0x00000000   Number         0  stm32f10x_exti.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_flash.c           0x00000000   Number         0  stm32f10x_flash.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_fsmc.c            0x00000000   Number         0  stm32f10x_fsmc.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_gpio.c            0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_iwdg.c            0x00000000   Number         0  stm32f10x_iwdg.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_pwr.c             0x00000000   Number         0  stm32f10x_pwr.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_rcc.c             0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_rtc.c             0x00000000   Number         0  stm32f10x_rtc.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_tim.c             0x00000000   Number         0  stm32f10x_tim.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_usart.c           0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    ..\FWLIB\src\stm32f10x_wwdg.c            0x00000000   Number         0  stm32f10x_wwdg.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F103ZE\startup_stm32f10x_hd.s 0x00000000   Number         0  startup_stm32f10x_hd.o ABSOLUTE
    RTE\Device\STM32F103ZE\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    e:\Keil_v5\ARM\PACK\ARM\CMSIS\5.6.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    e:\Keil_v5\ARM\PACK\Keil\ARM_Compiler\1.6.2\Source\retarget_io.c 0x00000000   Number         0  retarget_io.o ABSOLUTE
    e:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.6.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    src\DMT.cpp                              0x00000000   Number         0  dmt.o ABSOLUTE
    src\DMT_uart.cpp                         0x00000000   Number         0  dmt_uart.o ABSOLUTE
    src\display.cpp                          0x00000000   Number         0  display.o ABSOLUTE
    src\ebyte_lora.cpp                       0x00000000   Number         0  ebyte_lora.o ABSOLUTE
    src\main.c                               0x00000000   Number         0  main.o ABSOLUTE
    src\mbcrc.c                              0x00000000   Number         0  mbcrc.o ABSOLUTE
    src\mymodbus.cpp                         0x00000000   Number         0  mymodbus.o ABSOLUTE
    src\sbwt_app.cpp                         0x00000000   Number         0  sbwt_app.o ABSOLUTE
    src\sbwt_modbus.cpp                      0x00000000   Number         0  sbwt_modbus.o ABSOLUTE
    src\sbwt_transfer.cpp                    0x00000000   Number         0  sbwt_transfer.o ABSOLUTE
    src\sbwt_work.cpp                        0x00000000   Number         0  sbwt_work.o ABSOLUTE
    src\stm32uart.cpp                        0x00000000   Number         0  stm32uart.o ABSOLUTE
    RESET                                    0x08000000   Section      304  startup_stm32f10x_hd.o(RESET)
    !!!main                                  0x08000130   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000138   Section       52  __scatter.o(!!!scatter)
    !!dczerorl2                              0x0800016c   Section       90  __dczerorl2.o(!!dczerorl2)
    !!handler_zi                             0x080001c8   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x080001e4   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000009  0x080001e4   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$0000000C  0x080001ea   Section        6  _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C)
    .ARM.Collect$$_printf_percent$$00000017  0x080001f0   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x080001f4   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x080001f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x080001f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000005          0x080001f6   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000005)
    .ARM.Collect$$libinit$$0000000A          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x080001fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000024          0x080001fe   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000024)
    .ARM.Collect$$libinit$$00000025          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000031          0x08000202   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000031)
    .ARM.Collect$$libinit$$00000032          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000206   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000208   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800020a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000003      0x0800020a   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000004      0x0800020e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800020e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800020e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800020e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000D      0x0800020e   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    .ARM.Collect$$libshutdown$$0000000F      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000212   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000214   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000214   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000214   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800021a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000222   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000226   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000226   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800022e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000230   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000230   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000234   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x0800023c   Section        0  maybetermalloc2.o(.emb_text)
    .text                                    0x0800023c   Section        0  main.o(.text)
    .text                                    0x080002a8   Section        0  ebyte_lora.o(.text)
    [local to ebyte_lora_cpp]::getlorauartbuff() 0x080002a9   Thumb Code     4  ebyte_lora.o(.text)
    __sti___14_ebyte_lora_cpp_4c25969f       0x080003ef   Thumb Code    16  ebyte_lora.o(.text)
    .text                                    0x08000418   Section        0  mymodbus.o(.text)
    .text                                    0x08000554   Section        0  sbwt_modbus.o(.text)
    __sti___15_sbwt_modbus_cpp_22c7b4b0      0x080005b3   Thumb Code    10  sbwt_modbus.o(.text)
    .text                                    0x080005d4   Section        0  mbcrc.o(.text)
    .text                                    0x0800060c   Section        0  misc.o(.text)
    .text                                    0x080006e8   Section        0  stm32f10x_gpio.o(.text)
    .text                                    0x08000a44   Section        0  stm32f10x_rcc.o(.text)
    .text                                    0x08000de8   Section        0  stm32f10x_usart.o(.text)
    .text                                    0x080011f0   Section        0  stm32uart.o(.text)
    __sti___13_stm32uart_cpp_984db3e6        0x0800157d   Thumb Code    44  stm32uart.o(.text)
    .text                                    0x080015e4   Section        0  sbwt_app.o(.text)
    .text                                    0x080016d8   Section        0  sbwt_transfer.o(.text)
    .text                                    0x08001b54   Section        0  sbwt_work.o(.text)
    [local to sbwt_work_cpp]::get485uartbuff() 0x08001b89   Thumb Code     4  sbwt_work.o(.text)
    __sti___13_sbwt_work_cpp_bb3b508d        0x08001c73   Thumb Code    16  sbwt_work.o(.text)
    .text                                    0x08001c94   Section        0  display.o(.text)
    __sti___11_display_cpp_dmt1              0x08001e93   Thumb Code    44  display.o(.text)
    .text                                    0x08001ef4   Section        0  dmt.o(.text)
    .text                                    0x080021ac   Section        0  dmt_uart.o(.text)
    .text                                    0x08002418   Section        0  rtx_config.o(.text)
    .text                                    0x0800243c   Section        0  rtx_lib.o(.text)
    os_kernel_is_active                      0x08002445   Thumb Code    28  rtx_lib.o(.text)
    __tagsym$$used                           0x080024b1   Number         0  rtx_lib.o(.text)
    __tagsym$$used                           0x080024d3   Number         0  rtx_lib.o(.text)
    __tagsym$$used                           0x080024e9   Number         0  rtx_lib.o(.text)
    __tagsym$$used                           0x080024fb   Number         0  rtx_lib.o(.text)
    .text                                    0x08002514   Section        0  retarget_io.o(.text)
    stdout_putchar                           0x08002559   Thumb Code    12  retarget_io.o(.text)
    .text                                    0x080026e8   Section       64  startup_stm32f10x_hd.o(.text)
    .text                                    0x08002728   Section        0  system_stm32f10x.o(.text)
    SetSysClockTo72                          0x08002729   Thumb Code   214  system_stm32f10x.o(.text)
    SetSysClock                              0x080027ff   Thumb Code     8  system_stm32f10x.o(.text)
    .text                                    0x08002908   Section      148  irq_cm3.o(.text)
    .text                                    0x0800299c   Section        0  __2printf.o(.text)
    .text                                    0x080029b4   Section        0  __2sprintf.o(.text)
    .text                                    0x080029e0   Section        0  _printf_pad.o(.text)
    .text                                    0x08002a30   Section        0  _printf_dec.o(.text)
    .text                                    0x08002aa8   Section        0  _printf_hex_int.o(.text)
    .text                                    0x08002b00   Section        0  __printf_flags_wp.o(.text)
    .text                                    0x08002c38   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08002cc2   Section       68  rt_memclr.o(.text)
    .text                                    0x08002d06   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08002d54   Section      128  strcmpv7m.o(.text)
    .text                                    0x08002dd4   Section        0  heapauxi.o(.text)
    .text                                    0x08002ddc   Section        0  init_aeabi.o(.text)
    .text                                    0x08002e00   Section        0  _printf_intcommon.o(.text)
    .text                                    0x08002eb4   Section        0  _printf_char_common.o(.text)
    _printf_input_char                       0x08002eb5   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x08002ee4   Section        0  _sputc.o(.text)
    .text                                    0x08002eee   Section        0  defsig_pvfn_outer.o(.text)
    .text                                    0x08002efc   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08002f60   Section        0  initio_locked.o(.text)
    .text                                    0x08003128   Section        0  defsig_exit.o(.text)
    .text                                    0x08003134   Section        0  defsig_pvfn_inner.o(.text)
    .text                                    0x08003164   Section        0  sys_exit.o(.text)
    .text                                    0x08003170   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080031ba   Section        0  h1_alloc_mt.o(.text)
    Heap1_SizeAdjust                         0x080031bb   Thumb Code     8  h1_alloc_mt.o(.text)
    .text                                    0x08003258   Section        0  h1_free_mt.o(.text)
    .text                                    0x080032ce   Section        0  flsbuf.o(.text)
    .text                                    0x080034a4   Section        0  fclose.o(.text)
    .text                                    0x080034f0   Section        0  setvbuf_locked.o(.text)
    .text                                    0x08003558   Section        0  fopen_locked.o(.text)
    _freopen_locked                          0x08003559   Thumb Code   174  fopen_locked.o(.text)
    .text                                    0x0800369c   Section        0  exit.o(.text)
    .text                                    0x080036ae   Section        0  defsig_general.o(.text)
    .text                                    0x080036e0   Section        0  defsig_rtred_outer.o(.text)
    .text                                    0x080036ee   Section        0  sys_wrch.o(.text)
    .text                                    0x080036fc   Section        8  libspace.o(.text)
    .text                                    0x08003704   Section        2  use_no_semi.o(.text)
    .text                                    0x08003706   Section       10  rt_heap_descriptor_twolibspace.o(.text)
    .text                                    0x08003706   Section        0  indicate_semi.o(.text)
    .text                                    0x08003710   Section        0  hguard.o(.text)
    .text                                    0x08003714   Section        0  init_alloc.o(.text)
    .text                                    0x0800379e   Section        0  h1_init_mt.o(.text)
    .text                                    0x080037b0   Section        0  _printf_char_file_locked.o(.text)
    .text                                    0x080037f0   Section        0  fseek.o(.text)
    .text                                    0x080038e8   Section        0  stdio.o(.text)
    .text                                    0x080039d8   Section        0  defsig_rtred_inner.o(.text)
    .text                                    0x08003a0c   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x08003a1a   Section        0  h1_extend_mt.o(.text)
    .text                                    0x08003a58   Section        0  ftell.o(.text)
    .text                                    0x08003a9c   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x08003aec   Section        4  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x08003af0   Section        0  term_alloc.o(.text)
    .text                                    0x08003b00   Section        0  h1_final_mt.o(.text)
    [Anonymous Symbol]                       0x08003b0a   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x08003b0b   Thumb Code    68  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x08003b4e   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x08003b4f   Thumb Code    98  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x08003bb0   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x08003bb1   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08003bcc   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x08003bd4   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08003bd8   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x08003bf8   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x08003bfc   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x08003c00   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x08003c04   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08003c0c   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x08003c3c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x08003c40   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x08003c44   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x08003c48   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x08003c4c   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x08003c4d   Thumb Code   106  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x08003cb8   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x08003cb9   Thumb Code    80  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x08003d04   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08003d08   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x08003d28   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08003d2c   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x08003d54   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_1                             0x08003d58   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08003d5c   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x08003d84   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08003d88   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x08003da8   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08003dac   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x08003e14   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08003e18   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x08003e38   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x08003e3c   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x08003eb0   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08003eb4   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x08003ed4   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08003ed8   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x08003ef8   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08003efc   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x08003f1c   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08003f20   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x08003f40   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08003f44   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x08003f46   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08003fc6   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08004018   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x0800404e   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08004088   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x080040d2   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x08004118   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x08004119   Thumb Code   186  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080041d2   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x0800421c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x080042a8   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x080042ac   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x08004318   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x0800431c   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08004320   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x08004321   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x08004354   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08004358   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x08004359   Thumb Code   136  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x080043dc   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x080043e0   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x080043e1   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x08004418   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x0800441c   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x0800444c   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08004450   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x080044a8   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x080044ac   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x080044ad   Thumb Code    88  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x08004500   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08004504   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08004518   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08004542   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08004556   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x0800457e   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x0800457f   Thumb Code    42  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x080045a8   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x080045b8   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x080045bc   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x080045c4   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x080045e4   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x080045e8   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x080045ec   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x0800461c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x08004620   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x08004624   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x08004628   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x0800462c   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x08004638   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x0800463c   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x08004674   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08004678   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x0800469c   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08004708   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x0800470c   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x0800473c   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x08004740   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x08004744   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x08004748   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x08004749   Thumb Code    88  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x0800479c   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x080047a0   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x080047a8   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x080047ac   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    __arm_cp.35_0                            0x08004800   Number         4  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x08004804   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    __arm_cp.38_0                            0x08004824   Number         4  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x08004828   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_0                            0x08004848   Number         4  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_1                            0x0800484c   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x08004850   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x08004870   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08004874   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x08004875   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08004888   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x08004889   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.5_0                             0x08004890   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08004894   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x08004895   Thumb Code   340  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x080049dc   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_1                            0x080049e0   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x080049e4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x080049e8   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x080049e9   Thumb Code   136  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x08004a60   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x08004a64   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x08004a68   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x08004a6c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08004a70   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x08004a71   Thumb Code   224  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x08004b4c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08004b50   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x08004b51   Thumb Code   308  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x08004c7c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x08004c80   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08004c84   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x08004c85   Thumb Code   192  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x08004d40   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08004d44   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x08004d45   Thumb Code   144  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x08004dd0   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08004dd4   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x08004dd5   Thumb Code   196  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.12_0                            0x08004e94   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08004e98   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x08004e99   Thumb Code   108  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x08004f00   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08004f04   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x08004f05   Thumb Code   184  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.10_0                            0x08004fb8   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08004fbc   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x08004fbd   Thumb Code   112  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x08005028   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x0800502c   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsSet                     0x0800502d   Thumb Code   102  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x08005094   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadFlagsWait                    0x08005095   Thumb Code    76  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    __arm_cp.61_0                            0x080050dc   Number         4  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x080050e0   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadGetId                        0x080050e1   Thumb Code    12  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.20_0                            0x080050e8   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x080050ec   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x080050ed   Thumb Code   476  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x080052b4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x080052b8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x080052bc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x080052c0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x080052c4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i._ZN13STM_UART_INFO10checkTXCPLEv       0x080052c8   Section        0  stm32uart.o(i._ZN13STM_UART_INFO10checkTXCPLEv)
    i._ZN13STM_UART_INFO12usart_handleEv     0x080052d6   Section        0  stm32uart.o(i._ZN13STM_UART_INFO12usart_handleEv)
    i._ZN13STM_UART_INFO13wait_send_endEv    0x080053bc   Section        0  stm32uart.o(i._ZN13STM_UART_INFO13wait_send_endEv)
    i._ZN13STM_UART_INFO4receEPhj            0x080053d6   Section        0  stm32uart.o(i._ZN13STM_UART_INFO4receEPhj)
    i._ZN13STM_UART_INFO4sendEPhj            0x08005404   Section        0  stm32uart.o(i._ZN13STM_UART_INFO4sendEPhj)
    i._ZN13STM_UART_INFO6stopRXEv            0x08005432   Section        0  stm32uart.o(i._ZN13STM_UART_INFO6stopRXEv)
    i._ZN13STM_UART_INFO8GetRxNumEv          0x08005438   Section        0  stm32uart.o(i._ZN13STM_UART_INFO8GetRxNumEv)
    i._ZN13STM_UART_INFO9wait_receEjj        0x0800543e   Section        0  stm32uart.o(i._ZN13STM_UART_INFO9wait_receEjj)
    i._ZN13STM_UART_INFOC1ER13USART_TypeDef  0x080054a8   Section        0  stm32uart.o(i._ZN13STM_UART_INFOC1ER13USART_TypeDef)
    i._ZN20sbwt_modbus_reactorf4codeEv       0x080054d0   Section        0  sbwt_modbus.o(i._ZN20sbwt_modbus_reactorf4codeEv)
    i._ZN20sbwt_modbus_reactorf7prodataEPhiS0_j 0x080054d6   Section        0  sbwt_modbus.o(i._ZN20sbwt_modbus_reactorf7prodataEPhiS0_j)
    i._ZN9SBWT_INFO4initEP9UART_INFOjP16SBWT_BUFF_STRUCT 0x08005572   Section        0  dmt.o(i._ZN9SBWT_INFO4initEP9UART_INFOjP16SBWT_BUFF_STRUCT)
    i._ZN9SBWT_INFO7GetDataEi                0x08005582   Section        0  display.o(i._ZN9SBWT_INFO7GetDataEi)
    i._ZN9SBWT_INFO8getAliveEv               0x0800559e   Section        0  sbwt_work.o(i._ZN9SBWT_INFO8getAliveEv)
    i._ZN9SBWT_INFOC1Ev                      0x080055ae   Section        0  ebyte_lora.o(i._ZN9SBWT_INFOC1Ev)
    i.__aeabi_vec_ctor_nocookie_nodtor       0x080055b4   Section        0  aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor)
    i.__cxa_pure_virtual                     0x080055d8   Section        0  pure_virt.o(i.__cxa_pure_virtual)
    i._is_digit                              0x080055de   Section        0  __printf_wp.o(i._is_digit)
    i.fputc                                  0x080055ec   Section        0  fputc.o(i.fputc)
    .constdata                               0x08005606   Section      512  mbcrc.o(.constdata)
    aucCRCHi                                 0x08005606   Data         256  mbcrc.o(.constdata)
    aucCRCLo                                 0x08005706   Data         256  mbcrc.o(.constdata)
    .constdata                               0x08005808   Section       16  sbwt_app.o(.constdata)
    DataCodeGroup                            0x08005808   Data          16  sbwt_app.o(.constdata)
    .constdata                               0x08005818   Section       60  sbwt_transfer.o(.constdata)
    .constdata                               0x08005854   Section       16  display.o(.constdata)
    <Data1>                                  0x08005854   Data           8  display.o(.constdata)
    <Data2>                                  0x0800585c   Data           8  display.o(.constdata)
    .constdata                               0x08005864   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x08005864   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x08005888   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x080058ac   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x080058c8   Section       23  retarget_io.o(.constdata)
    .constdata                               0x080058e0   Section        1  irq_cm3.o(.constdata)
    .constdata                               0x080058e1   Section       40  _printf_hex_int.o(.constdata)
    uc_hextab                                0x080058e1   Data          20  _printf_hex_int.o(.constdata)
    lc_hextab                                0x080058f5   Data          20  _printf_hex_int.o(.constdata)
    .constdata                               0x08005909   Section       17  __printf_flags_wp.o(.constdata)
    maptable                                 0x08005909   Data          17  __printf_flags_wp.o(.constdata)
    .constdata__ZTV10ModBus_RTU              0x0800591c   Section       12  mymodbus.o(.constdata__ZTV10ModBus_RTU)
    .constdata__ZTV13ModBus_rector           0x08005928   Section       16  sbwt_modbus.o(.constdata__ZTV13ModBus_rector)
    .constdata__ZTV13STM_UART_INFO           0x08005938   Section       52  stm32uart.o(.constdata__ZTV13STM_UART_INFO)
    .constdata__ZTV20sbwt_modbus_reactorf    0x0800596c   Section       16  sbwt_modbus.o(.constdata__ZTV20sbwt_modbus_reactorf)
    .constdata__ZTV8myModBus                 0x0800597c   Section       12  sbwt_modbus.o(.constdata__ZTV8myModBus)
    .constdata__ZTV9UART_INFO                0x08005988   Section       52  stm32uart.o(.constdata__ZTV9UART_INFO)
    .rodata                                  0x080059bc   Section      160  rtx_lib.o(.rodata)
    __tagsym$$used                           0x080059bc   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used                           0x08005a24   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x08005a5c   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x08005a5c   Data          11  rtx_kernel.o(.rodata.str1.4)
    .init_array                              0x08005a88   Section        4  ebyte_lora.o(.init_array)
    .init_array                              0x08005a8c   Section        4  sbwt_modbus.o(.init_array)
    .init_array                              0x08005a90   Section        4  stm32uart.o(.init_array)
    .init_array                              0x08005a94   Section        4  sbwt_work.o(.init_array)
    .init_array                              0x08005a98   Section        4  display.o(.init_array)
    .init_array                              0x08005a9c   Section        0  init_aeabi.o(.init_array)
    .bss.os                                  0x20000000   Section     4160  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.libspace                         0x20001040   Section      496  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x20001040   Data         480  rtx_lib.o(.bss.os.libspace)
    os_libspace_id                           0x20001220   Data          16  rtx_lib.o(.bss.os.libspace)
    .bss.os.msgqueue.cb                      0x20001230   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001230   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001264   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001264   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200012b4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200012b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200012f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001340   Section     1280  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001340   Data        1024  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001740   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x20001840   Section       16  ebyte_lora.o(.data)
    lorabuff                                 0x20001840   Data          16  ebyte_lora.o(.data)
    .data                                    0x20001850   Section        4  sbwt_modbus.o(.data)
    .data                                    0x20001854   Section       20  stm32f10x_rcc.o(.data)
    APBAHBPrescTable                         0x20001854   Data          16  stm32f10x_rcc.o(.data)
    ADCPrescTable                            0x20001864   Data           4  stm32f10x_rcc.o(.data)
    .data                                    0x20001868   Section       40  stm32uart.o(.data)
    cons                                     0x20001868   Data          40  stm32uart.o(.data)
    .data                                    0x20001890   Section       16  sbwt_work.o(.data)
    buff485                                  0x20001890   Data          16  sbwt_work.o(.data)
    .data                                    0x200018a0   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x200018a4   Data           1  rtx_lib.o(.data)
    .data                                    0x200018a8   Section        4  retarget_io.o(.data)
    .data                                    0x200018ac   Section       20  system_stm32f10x.o(.data)
    .data                                    0x200018c0   Section        4  stdio_streams.o(.data)
    .data                                    0x200018c4   Section        4  stdio_streams.o(.data)
    .data                                    0x200018c8   Section        4  stdio_streams.o(.data)
    .data                                    0x200018cc   Section        4  streamlock.o(.data)
    .bss                                     0x20001978   Section     1460  ebyte_lora.o(.bss)
    thread_main_stk_1                        0x20001978   Data         512  ebyte_lora.o(.bss)
    txbuff                                   0x20001b78   Data         256  ebyte_lora.o(.bss)
    rxbuff                                   0x20001c78   Data         256  ebyte_lora.o(.bss)
    init_ebyte_lora()::thread1_attr          0x20001f08   Data          36  ebyte_lora.o(.bss)
    .bss                                     0x20001f30   Section      512  sbwt_modbus.o(.bss)
    thread1_stk_1                            0x20001f30   Data         512  sbwt_modbus.o(.bss)
    .bss                                     0x20002130   Section      240  stm32uart.o(.bss)
    .bss                                     0x20002220   Section     3024  sbwt_work.o(.bss)
    thread1_stk_1                            0x20002220   Data         512  sbwt_work.o(.bss)
    txbuff                                   0x20002bf0   Data         256  sbwt_work.o(.bss)
    rxbuff                                   0x20002cf0   Data         256  sbwt_work.o(.bss)
    .bss                                     0x20002df0   Section     1112  display.o(.bss)
    thread1_stk_1                            0x20003020   Data         512  display.o(.bss)
    .bss                                     0x20003248   Section      512  dmt.o(.bss)
    thread_rec_stk_1                         0x20003248   Data         512  dmt.o(.bss)
    .bss                                     0x20003448   Section       84  stdio_streams.o(.bss)
    .bss                                     0x2000349c   Section       84  stdio_streams.o(.bss)
    .bss                                     0x200034f0   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20003544   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x200035a4   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x200035a4   Data           1  os_systick.o(.bss.PendST)
    HEAP                                     0x200035a8   Section      512  startup_stm32f10x_hd.o(HEAP)
    Heap_Mem                                 0x200035a8   Data         512  startup_stm32f10x_hd.o(HEAP)
    STACK                                    0x200037a8   Section     2048  startup_stm32f10x_hd.o(STACK)
    Stack_Mem                                0x200037a8   Data        2048  startup_stm32f10x_hd.o(STACK)
    __initial_sp                             0x20003fa8   Data           0  startup_stm32f10x_hd.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    SHT$$ARM_EXIDX$$Base                      - Undefined Reference
    SHT$$ARM_EXIDX$$Limit                     - Undefined Reference
    __ARM::default_unexpected_handler()       - Undefined Weak Reference
    typeinfo for UART_HANDLE                  - Undefined Weak Reference
    __ARM_exceptions_buffer_required          - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __aeabi_unwind_cpp_pr1                    - Undefined Weak Reference
    __aeabi_unwind_cpp_pr2                    - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cxa_begin_cleanup                       - Undefined Weak Reference
    __cxa_call_unexpected                     - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __cxa_type_match                          - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    __Vectors_Size                           0x00000130   Number         0  startup_stm32f10x_hd.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_hd.o(RESET)
    __Vectors_End                            0x08000130   Data           0  startup_stm32f10x_hd.o(RESET)
    __main                                   0x08000131   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000139   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000139   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000139   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000147   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x0800016d   Thumb Code    90  __dczerorl2.o(!!dczerorl2)
    __decompress1                            0x0800016d   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    __scatterload_zeroinit                   0x080001c9   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_d                                0x080001e5   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_percent                          0x080001e5   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_x                                0x080001eb   Thumb Code     0  _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C)
    _printf_percent_end                      0x080001f1   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x080001f5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x080001f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_2                     0x080001f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000005)
    __rt_lib_init_preinit_1                  0x080001f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_atexit_1                   0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_fp_trap_1                  0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_rand_1                     0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_signal_1                   0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_2                    0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000024)
    __rt_lib_init_user_alloc_1               0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_alloca_1                   0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_cpp_2                      0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000031)
    __rt_lib_init_exceptions_1               0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_stdio_1                    0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_cpp_1                      0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_return                     0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_shutdown                        0x08000209   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800020b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_stdio_2                0x0800020b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_fp_trap_1              0x0800020f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_2                 0x0800020f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    __rt_lib_shutdown_signal_1               0x0800020f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800020f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800020f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_heap_1                 0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_entry                               0x08000215   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000215   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000215   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800021b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000223   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000227   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000227   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800022f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000235   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    app_main(void*)                          0x0800023d   Thumb Code    28  main.o(.text)
    _maybe_terminate_alloc                   0x0800023d   Thumb Code     0  maybetermalloc2.o(.emb_text)
    main                                     0x08000259   Thumb Code    78  main.o(.text)
    ebyte_operator::Lora_MD1_write(int)      0x080002ad   Thumb Code    26  ebyte_lora.o(.text)
    ebyte_operator::Lora_MD0_write(int)      0x080002c7   Thumb Code    26  ebyte_lora.o(.text)
    ebyte_operator::init()                   0x080002e1   Thumb Code    68  ebyte_lora.o(.text)
    ebyte_lora_main(void*)                   0x08000325   Thumb Code   138  ebyte_lora.o(.text)
    init_ebyte_lora()                        0x080003af   Thumb Code    30  ebyte_lora.o(.text)
    GetSbwt_lora(int)                        0x080003cd   Thumb Code    34  ebyte_lora.o(.text)
    myModBus::poll_main()                    0x08000419   Thumb Code   104  mymodbus.o(.text)
    ModBus_RTU::setRectorGroup(ModBus_rector*, int) 0x08000481   Thumb Code    14  mymodbus.o(.text)
    ModBus_RTU::proRec(unsigned char*, unsigned, unsigned char*, unsigned) 0x0800048f   Thumb Code   198  mymodbus.o(.text)
    sbwt_modbus_main(void*)                  0x08000555   Thumb Code    62  sbwt_modbus.o(.text)
    init_sbwt_modbus()                       0x08000593   Thumb Code    32  sbwt_modbus.o(.text)
    usMBCRC16                                0x080005d5   Thumb Code    48  mbcrc.o(.text)
    NVIC_PriorityGroupConfig                 0x0800060d   Thumb Code    10  misc.o(.text)
    NVIC_Init                                0x08000617   Thumb Code   100  misc.o(.text)
    NVIC_SetVectorTable                      0x0800067b   Thumb Code    14  misc.o(.text)
    NVIC_SystemLPConfig                      0x08000689   Thumb Code    34  misc.o(.text)
    SysTick_CLKSourceConfig                  0x080006ab   Thumb Code    40  misc.o(.text)
    GPIO_DeInit                              0x080006e9   Thumb Code   172  stm32f10x_gpio.o(.text)
    GPIO_AFIODeInit                          0x08000795   Thumb Code    20  stm32f10x_gpio.o(.text)
    GPIO_Init                                0x080007a9   Thumb Code   278  stm32f10x_gpio.o(.text)
    GPIO_StructInit                          0x080008bf   Thumb Code    16  stm32f10x_gpio.o(.text)
    GPIO_ReadInputDataBit                    0x080008cf   Thumb Code    18  stm32f10x_gpio.o(.text)
    GPIO_ReadInputData                       0x080008e1   Thumb Code     8  stm32f10x_gpio.o(.text)
    GPIO_ReadOutputDataBit                   0x080008e9   Thumb Code    18  stm32f10x_gpio.o(.text)
    GPIO_ReadOutputData                      0x080008fb   Thumb Code     8  stm32f10x_gpio.o(.text)
    GPIO_SetBits                             0x08000903   Thumb Code     4  stm32f10x_gpio.o(.text)
    GPIO_ResetBits                           0x08000907   Thumb Code     4  stm32f10x_gpio.o(.text)
    GPIO_WriteBit                            0x0800090b   Thumb Code    10  stm32f10x_gpio.o(.text)
    GPIO_Write                               0x08000915   Thumb Code     4  stm32f10x_gpio.o(.text)
    GPIO_PinLockConfig                       0x08000919   Thumb Code    18  stm32f10x_gpio.o(.text)
    GPIO_EventOutputConfig                   0x0800092b   Thumb Code    26  stm32f10x_gpio.o(.text)
    GPIO_EventOutputCmd                      0x08000945   Thumb Code     6  stm32f10x_gpio.o(.text)
    GPIO_PinRemapConfig                      0x0800094b   Thumb Code   138  stm32f10x_gpio.o(.text)
    GPIO_EXTILineConfig                      0x080009d5   Thumb Code    66  stm32f10x_gpio.o(.text)
    GPIO_ETH_MediaInterfaceConfig            0x08000a17   Thumb Code     8  stm32f10x_gpio.o(.text)
    RCC_DeInit                               0x08000a45   Thumb Code    64  stm32f10x_rcc.o(.text)
    RCC_HSEConfig                            0x08000a85   Thumb Code    70  stm32f10x_rcc.o(.text)
    RCC_GetFlagStatus                        0x08000acb   Thumb Code    56  stm32f10x_rcc.o(.text)
    RCC_WaitForHSEStartUp                    0x08000b03   Thumb Code    56  stm32f10x_rcc.o(.text)
    RCC_AdjustHSICalibrationValue            0x08000b3b   Thumb Code    20  stm32f10x_rcc.o(.text)
    RCC_HSICmd                               0x08000b4f   Thumb Code     6  stm32f10x_rcc.o(.text)
    RCC_PLLConfig                            0x08000b55   Thumb Code    24  stm32f10x_rcc.o(.text)
    RCC_PLLCmd                               0x08000b6d   Thumb Code     6  stm32f10x_rcc.o(.text)
    RCC_SYSCLKConfig                         0x08000b73   Thumb Code    18  stm32f10x_rcc.o(.text)
    RCC_GetSYSCLKSource                      0x08000b85   Thumb Code    10  stm32f10x_rcc.o(.text)
    RCC_HCLKConfig                           0x08000b8f   Thumb Code    18  stm32f10x_rcc.o(.text)
    RCC_PCLK1Config                          0x08000ba1   Thumb Code    18  stm32f10x_rcc.o(.text)
    RCC_PCLK2Config                          0x08000bb3   Thumb Code    20  stm32f10x_rcc.o(.text)
    RCC_ITConfig                             0x08000bc7   Thumb Code    26  stm32f10x_rcc.o(.text)
    RCC_USBCLKConfig                         0x08000be1   Thumb Code     8  stm32f10x_rcc.o(.text)
    RCC_ADCCLKConfig                         0x08000be9   Thumb Code    18  stm32f10x_rcc.o(.text)
    RCC_LSEConfig                            0x08000bfb   Thumb Code    50  stm32f10x_rcc.o(.text)
    RCC_LSICmd                               0x08000c2d   Thumb Code     6  stm32f10x_rcc.o(.text)
    RCC_RTCCLKConfig                         0x08000c33   Thumb Code    12  stm32f10x_rcc.o(.text)
    RCC_RTCCLKCmd                            0x08000c3f   Thumb Code     8  stm32f10x_rcc.o(.text)
    RCC_GetClocksFreq                        0x08000c47   Thumb Code   192  stm32f10x_rcc.o(.text)
    RCC_AHBPeriphClockCmd                    0x08000d07   Thumb Code    26  stm32f10x_rcc.o(.text)
    RCC_APB2PeriphClockCmd                   0x08000d21   Thumb Code    26  stm32f10x_rcc.o(.text)
    RCC_APB1PeriphClockCmd                   0x08000d3b   Thumb Code    26  stm32f10x_rcc.o(.text)
    RCC_APB2PeriphResetCmd                   0x08000d55   Thumb Code    26  stm32f10x_rcc.o(.text)
    RCC_APB1PeriphResetCmd                   0x08000d6f   Thumb Code    26  stm32f10x_rcc.o(.text)
    RCC_BackupResetCmd                       0x08000d89   Thumb Code     8  stm32f10x_rcc.o(.text)
    RCC_ClockSecuritySystemCmd               0x08000d91   Thumb Code     6  stm32f10x_rcc.o(.text)
    RCC_MCOConfig                            0x08000d97   Thumb Code     6  stm32f10x_rcc.o(.text)
    RCC_ClearFlag                            0x08000d9d   Thumb Code    14  stm32f10x_rcc.o(.text)
    RCC_GetITStatus                          0x08000dab   Thumb Code    20  stm32f10x_rcc.o(.text)
    RCC_ClearITPendingBit                    0x08000dbf   Thumb Code     6  stm32f10x_rcc.o(.text)
    USART_DeInit                             0x08000de9   Thumb Code   134  stm32f10x_usart.o(.text)
    USART_Init                               0x08000e6f   Thumb Code   210  stm32f10x_usart.o(.text)
    USART_StructInit                         0x08000f41   Thumb Code    24  stm32f10x_usart.o(.text)
    USART_ClockInit                          0x08000f59   Thumb Code    34  stm32f10x_usart.o(.text)
    USART_ClockStructInit                    0x08000f7b   Thumb Code    12  stm32f10x_usart.o(.text)
    USART_Cmd                                0x08000f87   Thumb Code    24  stm32f10x_usart.o(.text)
    USART_ITConfig                           0x08000f9f   Thumb Code    74  stm32f10x_usart.o(.text)
    USART_DMACmd                             0x08000fe9   Thumb Code    18  stm32f10x_usart.o(.text)
    USART_SetAddress                         0x08000ffb   Thumb Code    18  stm32f10x_usart.o(.text)
    USART_WakeUpConfig                       0x0800100d   Thumb Code    18  stm32f10x_usart.o(.text)
    USART_ReceiverWakeUpCmd                  0x0800101f   Thumb Code    24  stm32f10x_usart.o(.text)
    USART_LINBreakDetectLengthConfig         0x08001037   Thumb Code    18  stm32f10x_usart.o(.text)
    USART_LINCmd                             0x08001049   Thumb Code    24  stm32f10x_usart.o(.text)
    USART_SendData                           0x08001061   Thumb Code     8  stm32f10x_usart.o(.text)
    USART_ReceiveData                        0x08001069   Thumb Code    10  stm32f10x_usart.o(.text)
    USART_SendBreak                          0x08001073   Thumb Code    10  stm32f10x_usart.o(.text)
    USART_SetGuardTime                       0x0800107d   Thumb Code    16  stm32f10x_usart.o(.text)
    USART_SetPrescaler                       0x0800108d   Thumb Code    16  stm32f10x_usart.o(.text)
    USART_SmartCardCmd                       0x0800109d   Thumb Code    24  stm32f10x_usart.o(.text)
    USART_SmartCardNACKCmd                   0x080010b5   Thumb Code    24  stm32f10x_usart.o(.text)
    USART_HalfDuplexCmd                      0x080010cd   Thumb Code    24  stm32f10x_usart.o(.text)
    USART_OverSampling8Cmd                   0x080010e5   Thumb Code    22  stm32f10x_usart.o(.text)
    USART_OneBitMethodCmd                    0x080010fb   Thumb Code    24  stm32f10x_usart.o(.text)
    USART_IrDAConfig                         0x08001113   Thumb Code    18  stm32f10x_usart.o(.text)
    USART_IrDACmd                            0x08001125   Thumb Code    24  stm32f10x_usart.o(.text)
    USART_GetFlagStatus                      0x0800113d   Thumb Code    26  stm32f10x_usart.o(.text)
    USART_ClearFlag                          0x08001157   Thumb Code    18  stm32f10x_usart.o(.text)
    USART_GetITStatus                        0x08001169   Thumb Code    84  stm32f10x_usart.o(.text)
    USART_ClearITPendingBit                  0x080011bd   Thumb Code    52  stm32f10x_usart.o(.text)
    uart5_init(unsigned)                     0x080011f1   Thumb Code   160  stm32uart.o(.text)
    uart4_init(unsigned)                     0x08001291   Thumb Code   164  stm32uart.o(.text)
    uart3_init(unsigned)                     0x08001335   Thumb Code   174  stm32uart.o(.text)
    uart2_init(unsigned)                     0x080013e3   Thumb Code   160  stm32uart.o(.text)
    uart1_init(unsigned)                     0x08001483   Thumb Code   164  stm32uart.o(.text)
    UART5_IRQHandler                         0x08001527   Thumb Code    10  stm32uart.o(.text)
    UART4_IRQHandler                         0x08001531   Thumb Code    10  stm32uart.o(.text)
    USART3_IRQHandler                        0x0800153b   Thumb Code    10  stm32uart.o(.text)
    USART2_IRQHandler                        0x08001545   Thumb Code    10  stm32uart.o(.text)
    USART1_IRQHandler                        0x0800154f   Thumb Code    10  stm32uart.o(.text)
    get_myuart                               0x08001559   Thumb Code    36  stm32uart.o(.text)
    a48decode(TPack*, SBWT_INFO&)            0x080015e5   Thumb Code    98  sbwt_app.o(.text)
    errRet(TPack*, SBWT_INFO&)               0x08001647   Thumb Code    38  sbwt_app.o(.text)
    checkAppData(TPack*, SBWT_INFO&)         0x0800166d   Thumb Code    66  sbwt_app.o(.text)
    CRC16ppp(unsigned char*, unsigned)       0x080016d9   Thumb Code    60  sbwt_transfer.o(.text)
    mkTpack(TPack*, unsigned char*)          0x08001715   Thumb Code    84  sbwt_transfer.o(.text)
    findbyte(unsigned char*, unsigned, unsigned char*, unsigned) 0x08001769   Thumb Code    74  sbwt_transfer.o(.text)
    unTpakc(TPack*, unsigned char*, unsigned) 0x080017b3   Thumb Code   194  sbwt_transfer.o(.text)
    SBWT_INFO::GetDataSBWT()                 0x08001875   Thumb Code   122  sbwt_transfer.o(.text)
    SBWT_INFO::initSBWT()                    0x080018ef   Thumb Code   280  sbwt_transfer.o(.text)
    SBWT_INFO::initTestSbwt()                0x08001a07   Thumb Code    40  sbwt_transfer.o(.text)
    SBWT_INFO::ChangeNum(int)                0x08001a2f   Thumb Code   148  sbwt_transfer.o(.text)
    SBWT_INFO::SetZeroCalibration()          0x08001ac3   Thumb Code   122  sbwt_transfer.o(.text)
    dec_sbwt_group_liveTim(SBWT_INFO*, int, int) 0x08001b55   Thumb Code    52  sbwt_work.o(.text)
    sbwt_main(void*)                         0x08001b8d   Thumb Code   106  sbwt_work.o(.text)
    init_sbwt()                              0x08001bf7   Thumb Code    32  sbwt_work.o(.text)
    GetSbwt_485(int)                         0x08001c17   Thumb Code    34  sbwt_work.o(.text)
    GetSbwt_all(int)                         0x08001c39   Thumb Code    58  sbwt_work.o(.text)
    dmt_ctl(UART_INFO*, SBWT_BUFF_STRUCT*, unsigned) 0x08001c95   Thumb Code    22  display.o(.text)
    dispIndex(int, SBWT_INFO*)               0x08001cab   Thumb Code    68  display.o(.text)
    show_data(DMT&, SBWT_INFO*)              0x08001cef   Thumb Code   260  display.o(.text)
    disp_main(void*)                         0x08001df3   Thumb Code   128  display.o(.text)
    init_display()                           0x08001e73   Thumb Code    32  display.o(.text)
    DMT::read_addr_num(int, int)             0x08001ef5   Thumb Code   114  dmt.o(.text)
    DMT::default_rec(DMT_UART_DATA_STRUCT*)  0x08001f67   Thumb Code    42  dmt.o(.text)
    DMT::write_rec(DMT_UART_DATA_STRUCT*)    0x08001f91   Thumb Code    54  dmt.o(.text)
    DMT::rec_thread()                        0x08001fc7   Thumb Code    86  dmt.o(.text)
    disp_rec(void*)                          0x0800201d   Thumb Code    16  dmt.o(.text)
    setNewID(UART_INFO*, SBWT_BUFF_STRUCT*, int) 0x0800202d   Thumb Code    54  dmt.o(.text)
    setZeroCalibration(UART_INFO*, SBWT_BUFF_STRUCT*, int) 0x08002063   Thumb Code    52  dmt.o(.text)
    DMT::write_int(int, int)                 0x08002097   Thumb Code    30  dmt.o(.text)
    DMT::write_float(int, float)             0x080020b5   Thumb Code    30  dmt.o(.text)
    DMT::init(UART_INFO*)                    0x080020d3   Thumb Code    46  dmt.o(.text)
    DMT::SP_Work(UART_INFO*, SBWT_BUFF_STRUCT*, unsigned) 0x08002101   Thumb Code   102  dmt.o(.text)
    DMT::set_pro(int(*)(void*, DMT_UART_DATA_STRUCT*), void*) 0x08002167   Thumb Code    66  dmt.o(.text)
    crc_make(unsigned char*, int, unsigned)  0x080021ad   Thumb Code    58  dmt_uart.o(.text)
    dmt_unpack_buff(DMT_UART_DATA_STRUCT*, unsigned char*, int, int) 0x080021e7   Thumb Code   170  dmt_uart.o(.text)
    unpackdata_rd(void*, DMT_UART_DATA_STRUCT*) 0x08002291   Thumb Code    62  dmt_uart.o(.text)
    DMT::write_data(int, void*, int&)        0x080022cf   Thumb Code   160  dmt_uart.o(.text)
    DMT::read_data(int, void*, int&)         0x0800236f   Thumb Code   170  dmt_uart.o(.text)
    osRtxIdleThread                          0x08002419   Thumb Code     4  rtx_config.o(.text)
    osRtxErrorNotify                         0x0800241d   Thumb Code    32  rtx_config.o(.text)
    _platform_post_stackheap_init            0x0800243d   Thumb Code     8  rtx_lib.o(.text)
    __user_perthread_libspace                0x08002461   Thumb Code    80  rtx_lib.o(.text)
    _mutex_initialize                        0x080024b1   Thumb Code    34  rtx_lib.o(.text)
    _mutex_acquire                           0x080024d3   Thumb Code    22  rtx_lib.o(.text)
    _mutex_release                           0x080024e9   Thumb Code    18  rtx_lib.o(.text)
    _mutex_free                              0x080024fb   Thumb Code    12  rtx_lib.o(.text)
    ITM_SendChar                             0x08002515   Thumb Code    42  retarget_io.o(.text)
    ITM_ReceiveChar                          0x0800253f   Thumb Code    26  retarget_io.o(.text)
    _sys_open                                0x08002565   Thumb Code    80  retarget_io.o(.text)
    _sys_close                               0x080025b5   Thumb Code    38  retarget_io.o(.text)
    _sys_write                               0x080025db   Thumb Code    70  retarget_io.o(.text)
    _sys_read                                0x08002621   Thumb Code    46  retarget_io.o(.text)
    _sys_istty                               0x0800264f   Thumb Code    36  retarget_io.o(.text)
    _sys_seek                                0x08002673   Thumb Code    44  retarget_io.o(.text)
    _sys_flen                                0x0800269f   Thumb Code    36  retarget_io.o(.text)
    Reset_Handler                            0x080026e9   Thumb Code     8  startup_stm32f10x_hd.o(.text)
    NMI_Handler                              0x080026f1   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    HardFault_Handler                        0x080026f3   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    MemManage_Handler                        0x080026f5   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    BusFault_Handler                         0x080026f7   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    UsageFault_Handler                       0x080026f9   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    DebugMon_Handler                         0x080026fd   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    ADC1_2_IRQHandler                        0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    ADC3_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    CAN1_RX1_IRQHandler                      0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    CAN1_SCE_IRQHandler                      0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel1_IRQHandler                 0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel2_IRQHandler                 0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel3_IRQHandler                 0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel4_IRQHandler                 0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel5_IRQHandler                 0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel6_IRQHandler                 0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel7_IRQHandler                 0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel1_IRQHandler                 0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel2_IRQHandler                 0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel3_IRQHandler                 0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel4_5_IRQHandler               0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI0_IRQHandler                         0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI15_10_IRQHandler                     0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI1_IRQHandler                         0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI2_IRQHandler                         0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI3_IRQHandler                         0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI4_IRQHandler                         0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI9_5_IRQHandler                       0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    FLASH_IRQHandler                         0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    FSMC_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C1_ER_IRQHandler                       0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C1_EV_IRQHandler                       0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C2_ER_IRQHandler                       0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C2_EV_IRQHandler                       0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    PVD_IRQHandler                           0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RCC_IRQHandler                           0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RTCAlarm_IRQHandler                      0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RTC_IRQHandler                           0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SDIO_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI1_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI2_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI3_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TAMPER_IRQHandler                        0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_BRK_IRQHandler                      0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_CC_IRQHandler                       0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_UP_IRQHandler                       0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM2_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM3_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM4_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM5_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM6_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM7_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_BRK_IRQHandler                      0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_CC_IRQHandler                       0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_UP_IRQHandler                       0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USBWakeUp_IRQHandler                     0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    WWDG_IRQHandler                          0x08002703   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    __user_initial_stackheap                 0x08002705   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SystemInit                               0x08002807   Thumb Code    78  system_stm32f10x.o(.text)
    SystemCoreClockUpdate                    0x08002855   Thumb Code   142  system_stm32f10x.o(.text)
    SVC_Handler                              0x08002909   Thumb Code   108  irq_cm3.o(.text)
    PendSV_Handler                           0x08002975   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x08002985   Thumb Code    16  irq_cm3.o(.text)
    __2printf                                0x0800299d   Thumb Code    20  __2printf.o(.text)
    __2sprintf                               0x080029b5   Thumb Code    38  __2sprintf.o(.text)
    _printf_pre_padding                      0x080029e1   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x08002a0d   Thumb Code    34  _printf_pad.o(.text)
    _printf_int_dec                          0x08002a31   Thumb Code   104  _printf_dec.o(.text)
    _printf_int_hex                          0x08002aa9   Thumb Code    84  _printf_hex_int.o(.text)
    _printf_longlong_hex                     0x08002aa9   Thumb Code     0  _printf_hex_int.o(.text)
    __printf                                 0x08002b01   Thumb Code   308  __printf_flags_wp.o(.text)
    __aeabi_memcpy                           0x08002c39   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08002c39   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08002c9f   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x08002cc3   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x08002cc3   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x08002cc7   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08002d07   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08002d07   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08002d07   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x08002d0b   Thumb Code     0  rt_memclr_w.o(.text)
    strcmp                                   0x08002d55   Thumb Code   128  strcmpv7m.o(.text)
    __use_two_region_memory                  0x08002dd5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x08002dd7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08002dd9   Thumb Code     2  heapauxi.o(.text)
    __cpp_initialize__aeabi_                 0x08002ddd   Thumb Code    26  init_aeabi.o(.text)
    _printf_int_common                       0x08002e01   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_char_common                      0x08002ebf   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x08002ee5   Thumb Code    10  _sputc.o(.text)
    __rt_SIGPVFN                             0x08002eef   Thumb Code    14  defsig_pvfn_outer.o(.text)
    __aeabi_memcpy4                          0x08002efd   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08002efd   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08002efd   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08002f45   Thumb Code     0  rt_memcpy_w.o(.text)
    _initio                                  0x08002f61   Thumb Code   240  initio_locked.o(.text)
    _terminateio                             0x08003051   Thumb Code   168  initio_locked.o(.text)
    __sig_exit                               0x08003129   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGPVFN_inner                       0x08003135   Thumb Code    14  defsig_pvfn_inner.o(.text)
    _sys_exit                                0x08003165   Thumb Code     8  sys_exit.o(.text)
    __user_setup_stackheap                   0x08003171   Thumb Code    74  sys_stackheap_outer.o(.text)
    _malloc_internal                         0x080031c3   Thumb Code   130  h1_alloc_mt.o(.text)
    malloc                                   0x08003245   Thumb Code    20  h1_alloc_mt.o(.text)
    _free_internal                           0x08003259   Thumb Code    98  h1_free_mt.o(.text)
    free                                     0x080032bb   Thumb Code    20  h1_free_mt.o(.text)
    __flsbuf                                 0x080032cf   Thumb Code   470  flsbuf.o(.text)
    __flsbuf_byte                            0x080032cf   Thumb Code     0  flsbuf.o(.text)
    __flsbuf_wide                            0x080032cf   Thumb Code     0  flsbuf.o(.text)
    _fclose_internal                         0x080034a5   Thumb Code    76  fclose.o(.text)
    fclose                                   0x080034a5   Thumb Code     0  fclose.o(.text)
    setvbuf                                  0x080034f1   Thumb Code   104  setvbuf_locked.o(.text)
    freopen                                  0x08003607   Thumb Code    42  fopen_locked.o(.text)
    _fopen$locked                            0x08003631   Thumb Code   100  fopen_locked.o(.text)
    exit                                     0x0800369d   Thumb Code    18  exit.o(.text)
    __default_signal_display                 0x080036af   Thumb Code    50  defsig_general.o(.text)
    __rt_SIGRTRED                            0x080036e1   Thumb Code    14  defsig_rtred_outer.o(.text)
    _ttywrch                                 0x080036ef   Thumb Code    14  sys_wrch.o(.text)
    __user_libspace                          0x080036fd   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080036fd   Thumb Code     0  libspace.o(.text)
    __I$use$semihosting                      0x08003705   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08003705   Thumb Code     2  use_no_semi.o(.text)
    __rt_heap_descriptor                     0x08003707   Thumb Code    10  rt_heap_descriptor_twolibspace.o(.text)
    __semihosting_library_function           0x08003707   Thumb Code     0  indicate_semi.o(.text)
    __use_no_heap                            0x08003711   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x08003713   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x08003715   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x08003717   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x08003719   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x0800373b   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x08003741   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x0800379f   Thumb Code    14  h1_init_mt.o(.text)
    __Heap_DescSize                          0x080037ad   Thumb Code     4  h1_init_mt.o(.text)
    _printf_char_file                        0x080037b1   Thumb Code    58  _printf_char_file_locked.o(.text)
    _fseek                                   0x080037f1   Thumb Code   242  fseek.o(.text)
    fseek                                    0x080037f1   Thumb Code     0  fseek.o(.text)
    _seterr                                  0x080038e9   Thumb Code    20  stdio.o(.text)
    _writebuf                                0x080038fd   Thumb Code    84  stdio.o(.text)
    _fflush                                  0x08003951   Thumb Code    70  stdio.o(.text)
    _deferredlazyseek                        0x08003997   Thumb Code    60  stdio.o(.text)
    __rt_SIGRTRED_inner                      0x080039d9   Thumb Code    14  defsig_rtred_inner.o(.text)
    __rt_SIGRTMEM                            0x08003a0d   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __Heap_ProvideMemory                     0x08003a1b   Thumb Code    62  h1_extend_mt.o(.text)
    _ftell_internal                          0x08003a59   Thumb Code    66  ftell.o(.text)
    ftell                                    0x08003a59   Thumb Code     0  ftell.o(.text)
    __rt_SIGRTMEM_inner                      0x08003a9d   Thumb Code    22  defsig_rtmem_inner.o(.text)
    __aeabi_errno_addr                       0x08003aed   Thumb Code     4  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x08003aed   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x08003aed   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    _terminate_alloc                         0x08003af1   Thumb Code    16  term_alloc.o(.text)
    __Heap_Finalize                          0x08003b01   Thumb Code    10  h1_final_mt.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x08003bcd   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x08003bd9   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x08003c05   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08003c0d   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x08003d09   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x08003d2d   Thumb Code    48  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x08003d5d   Thumb Code    44  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08003d89   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x08003dad   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x08003e19   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x08003e3d   Thumb Code   120  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08003eb5   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08003ed9   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08003efd   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08003f21   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxKernelPreInit                       0x08003f45   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x08003f47   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08003fc7   Thumb Code    82  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08004019   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x0800404f   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08004089   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x080040d3   Thumb Code    70  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x080041d3   Thumb Code    74  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x0800421d   Thumb Code   144  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x080042ad   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x0800441d   Thumb Code    52  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08004451   Thumb Code    92  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08004505   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08004519   Thumb Code    42  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08004543   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08004557   Thumb Code    40  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x080045a9   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x080045bd   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x080045c5   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x080045ed   Thumb Code    64  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x0800462d   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x0800463d   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08004679   Thumb Code    36  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x0800469d   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x0800470d   Thumb Code    60  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x080047a1   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x080047ad   Thumb Code    88  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x08004805   Thumb Code    36  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadGetId                            0x08004829   Thumb Code    40  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x08004851   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    STM_UART_INFO::checkTXCPL()              0x080052c9   Thumb Code    14  stm32uart.o(i._ZN13STM_UART_INFO10checkTXCPLEv)
    STM_UART_INFO::usart_handle()            0x080052d7   Thumb Code   230  stm32uart.o(i._ZN13STM_UART_INFO12usart_handleEv)
    STM_UART_INFO::wait_send_end()           0x080053bd   Thumb Code    26  stm32uart.o(i._ZN13STM_UART_INFO13wait_send_endEv)
    STM_UART_INFO::rece(unsigned char*, unsigned) 0x080053d7   Thumb Code    46  stm32uart.o(i._ZN13STM_UART_INFO4receEPhj)
    STM_UART_INFO::send(unsigned char*, unsigned) 0x08005405   Thumb Code    46  stm32uart.o(i._ZN13STM_UART_INFO4sendEPhj)
    STM_UART_INFO::stopRX()                  0x08005433   Thumb Code     6  stm32uart.o(i._ZN13STM_UART_INFO6stopRXEv)
    STM_UART_INFO::GetRxNum()                0x08005439   Thumb Code     6  stm32uart.o(i._ZN13STM_UART_INFO8GetRxNumEv)
    STM_UART_INFO::wait_rece(unsigned, unsigned) 0x0800543f   Thumb Code   104  stm32uart.o(i._ZN13STM_UART_INFO9wait_receEjj)
    STM_UART_INFO::STM_UART_INFO(USART_TypeDef&) 0x080054a9   Thumb Code    30  stm32uart.o(i._ZN13STM_UART_INFOC1ER13USART_TypeDef)
    STM_UART_INFO::STM_UART_INFO__sub_object(USART_TypeDef&) 0x080054a9   Thumb Code     0  stm32uart.o(i._ZN13STM_UART_INFOC1ER13USART_TypeDef)
    sbwt_modbus_reactorf::code()             0x080054d1   Thumb Code     6  sbwt_modbus.o(i._ZN20sbwt_modbus_reactorf4codeEv)
    sbwt_modbus_reactorf::prodata(unsigned char*, int, unsigned char*, unsigned) 0x080054d7   Thumb Code   156  sbwt_modbus.o(i._ZN20sbwt_modbus_reactorf7prodataEPhiS0_j)
    SBWT_INFO::init(UART_INFO*, unsigned, SBWT_BUFF_STRUCT*) 0x08005573   Thumb Code    16  dmt.o(i._ZN9SBWT_INFO4initEP9UART_INFOjP16SBWT_BUFF_STRUCT)
    SBWT_INFO::GetData(int)                  0x08005583   Thumb Code    28  display.o(i._ZN9SBWT_INFO7GetDataEi)
    SBWT_INFO::getAlive()                    0x0800559f   Thumb Code    16  sbwt_work.o(i._ZN9SBWT_INFO8getAliveEv)
    SBWT_INFO::SBWT_INFO()                   0x080055af   Thumb Code     6  ebyte_lora.o(i._ZN9SBWT_INFOC1Ev)
    SBWT_INFO::SBWT_INFO__sub_object()       0x080055af   Thumb Code     0  ebyte_lora.o(i._ZN9SBWT_INFOC1Ev)
    __aeabi_vec_ctor_nocookie_nodtor         0x080055b5   Thumb Code    36  aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor)
    __cxa_pure_virtual                       0x080055d9   Thumb Code     6  pure_virt.o(i.__cxa_pure_virtual)
    _is_digit                                0x080055df   Thumb Code    14  __printf_wp.o(i._is_digit)
    _fputc$unlocked                          0x080055ed   Thumb Code    26  fputc.o(i.fputc)
    osRtxUserSVC                             0x080058c4   Data           4  rtx_lib.o(.constdata)
    __stdin_name                             0x080058c8   Data           7  retarget_io.o(.constdata)
    __stdout_name                            0x080058cf   Data           8  retarget_io.o(.constdata)
    __stderr_name                            0x080058d7   Data           8  retarget_io.o(.constdata)
    irqRtxLib                                0x080058e0   Data           1  irq_cm3.o(.constdata)
    vtable for ModBus_RTU                    0x0800591c   Data          12  mymodbus.o(.constdata__ZTV10ModBus_RTU)
    vtable for ModBus_rector                 0x08005928   Data          16  sbwt_modbus.o(.constdata__ZTV13ModBus_rector)
    vtable for STM_UART_INFO                 0x08005938   Data          52  stm32uart.o(.constdata__ZTV13STM_UART_INFO)
    vtable for sbwt_modbus_reactorf          0x0800596c   Data          16  sbwt_modbus.o(.constdata__ZTV20sbwt_modbus_reactorf)
    vtable for myModBus                      0x0800597c   Data          12  sbwt_modbus.o(.constdata__ZTV8myModBus)
    vtable for UART_INFO                     0x08005988   Data          52  stm32uart.o(.constdata__ZTV9UART_INFO)
    osRtxConfig                              0x080059bc   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x08005a24   Data          56  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x08005a68   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08005a88   Number         0  anon$$obj.o(Region$$Table)
    SHT$$INIT_ARRAY$$Base                    0x08005a88   Number         0  ebyte_lora.o(.init_array)
    SHT$$INIT_ARRAY$$Limit                   0x08005a9c   Number         0  init_aeabi.o(.init_array)
    .bss.os.msgqueue.cb$$Base                0x20001230   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20001264   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200012b4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2000133c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    smr                                      0x20001850   Data           4  sbwt_modbus.o(.data)
    irqRtxLibRef                             0x200018a0   Data           4  rtx_lib.o(.data)
    ITM_RxBuffer                             0x200018a8   Data           4  retarget_io.o(.data)
    SystemCoreClock                          0x200018ac   Data           4  system_stm32f10x.o(.data)
    AHBPrescTable                            0x200018b0   Data          16  system_stm32f10x.o(.data)
    __aeabi_stdin                            0x200018c0   Data           4  stdio_streams.o(.data)
    __aeabi_stdout                           0x200018c4   Data           4  stdio_streams.o(.data)
    __aeabi_stderr                           0x200018c8   Data           4  stdio_streams.o(.data)
    _stream_list_lock                        0x200018cc   Data           4  streamlock.o(.data)
    osRtxInfo                                0x200018d0   Data         164  rtx_kernel.o(.data.os)
    sbinfo_lora                              0x20001d78   Data         400  ebyte_lora.o(.bss)
    stmuart5                                 0x20002130   Data          48  stm32uart.o(.bss)
    stmuart4                                 0x20002160   Data          48  stm32uart.o(.bss)
    stmuart3                                 0x20002190   Data          48  stm32uart.o(.bss)
    stmuart2                                 0x200021c0   Data          48  stm32uart.o(.bss)
    stmuart1                                 0x200021f0   Data          48  stm32uart.o(.bss)
    sbinfo                                   0x20002420   Data        2000  sbwt_work.o(.bss)
    dmt1                                     0x20002df0   Data         556  display.o(.bss)
    buff                                     0x20003220   Data          40  display.o(.bss)
    __stdin                                  0x20003448   Data          84  stdio_streams.o(.bss)
    __stdout                                 0x2000349c   Data          84  stdio_streams.o(.bss)
    __stderr                                 0x200034f0   Data          84  stdio_streams.o(.bss)
    __libspace_start                         0x20003544   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200035a4   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000131

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00007410, Max: 0x00080000, ABSOLUTE, COMPRESSED[0x00005b30])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00005a9c, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000130   Data   RO         1029    RESET               startup_stm32f10x_hd.o
    0x08000130   0x08000130   0x00000008   Code   RO         1586  * !!!main             c_w.l(__main.o)
    0x08000138   0x08000138   0x00000034   Code   RO         2109    !!!scatter          c_w.l(__scatter.o)
    0x0800016c   0x0800016c   0x0000005a   Code   RO         2107    !!dczerorl2         c_w.l(__dczerorl2.o)
    0x080001c6   0x080001c6   0x00000002   PAD
    0x080001c8   0x080001c8   0x0000001c   Code   RO         2111    !!handler_zi        c_w.l(__scatter_zi.o)
    0x080001e4   0x080001e4   0x00000000   Code   RO         1575    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x080001e4   0x080001e4   0x00000006   Code   RO         1574    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x080001ea   0x080001ea   0x00000006   Code   RO         1573    .ARM.Collect$$_printf_percent$$0000000C  c_w.l(_printf_x.o)
    0x080001f0   0x080001f0   0x00000004   Code   RO         1715    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x080001f4   0x080001f4   0x00000002   Code   RO         1951    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080001f6   0x080001f6   0x00000000   Code   RO         1729    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x080001f6   0x080001f6   0x00000000   Code   RO         1731    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x080001f6   0x080001f6   0x00000008   Code   RO         1732    .ARM.Collect$$libinit$$00000005  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1734    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1736    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1738    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1741    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1743    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1745    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1747    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1749    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1751    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1753    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1755    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1757    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000000   Code   RO         1759    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x080001fe   0x080001fe   0x00000004   Code   RO         1760    .ARM.Collect$$libinit$$00000024  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1761    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1765    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1767    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1769    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000004   Code   RO         1770    .ARM.Collect$$libinit$$00000031  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1771    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000002   Code   RO         1772    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000208   0x08000208   0x00000002   Code   RO         2100    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800020a   0x0800020a   0x00000000   Code   RO         1953    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0800020a   0x0800020a   0x00000004   Code   RO         1954    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1955    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1958    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1961    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1963    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800020e   0x0800020e   0x00000004   Code   RO         1964    .ARM.Collect$$libshutdown$$0000000D  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1966    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000002   Code   RO         1967    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000214   0x08000214   0x00000000   Code   RO         1706    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000214   0x08000214   0x00000000   Code   RO         1790    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000214   0x08000214   0x00000006   Code   RO         1802    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800021a   0x0800021a   0x00000008   Code   RO         1791    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000004   Code   RO         1793    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000000   Code   RO         1795    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000008   Code   RO         1796    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800022e   0x0800022e   0x00000002   Code   RO         1990    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000230   0x08000230   0x00000000   Code   RO         2050    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000230   0x08000230   0x00000004   Code   RO         2051    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000234   0x08000234   0x00000006   Code   RO         2052    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800023a   0x0800023a   0x00000002   PAD
    0x0800023c   0x0800023c   0x00000000   Code   RO         2057    .emb_text           c_w.l(maybetermalloc2.o)
    0x0800023c   0x0800023c   0x0000006a   Code   RO            1    .text               main.o
    0x080002a6   0x080002a6   0x00000002   PAD
    0x080002a8   0x080002a8   0x00000170   Code   RO          124    .text               ebyte_lora.o
    0x08000418   0x08000418   0x0000013c   Code   RO          163    .text               mymodbus.o
    0x08000554   0x08000554   0x00000080   Code   RO          192    .text               sbwt_modbus.o
    0x080005d4   0x080005d4   0x00000038   Code   RO          247    .text               mbcrc.o
    0x0800060c   0x0800060c   0x000000dc   Code   RO          265    .text               misc.o
    0x080006e8   0x080006e8   0x0000035c   Code   RO          444    .text               stm32f10x_gpio.o
    0x08000a44   0x08000a44   0x000003a4   Code   RO          468    .text               stm32f10x_rcc.o
    0x08000de8   0x08000de8   0x00000408   Code   RO          506    .text               stm32f10x_usart.o
    0x080011f0   0x080011f0   0x000003f4   Code   RO          554    .text               stm32uart.o
    0x080015e4   0x080015e4   0x000000f4   Code   RO          661    .text               sbwt_app.o
    0x080016d8   0x080016d8   0x0000047c   Code   RO          688    .text               sbwt_transfer.o
    0x08001b54   0x08001b54   0x00000140   Code   RO          720    .text               sbwt_work.o
    0x08001c94   0x08001c94   0x00000260   Code   RO          762    .text               display.o
    0x08001ef4   0x08001ef4   0x000002b8   Code   RO          858    .text               dmt.o
    0x080021ac   0x080021ac   0x0000026c   Code   RO          885    .text               dmt_uart.o
    0x08002418   0x08002418   0x00000024   Code   RO          908    .text               rtx_config.o
    0x0800243c   0x0800243c   0x000000d8   Code   RO          949    .text               rtx_lib.o
    0x08002514   0x08002514   0x000001d4   Code   RO          995    .text               retarget_io.o
    0x080026e8   0x080026e8   0x00000040   Code   RO         1030    .text               startup_stm32f10x_hd.o
    0x08002728   0x08002728   0x000001e0   Code   RO         1034    .text               system_stm32f10x.o
    0x08002908   0x08002908   0x00000094   Code   RO         1303    .text               RTX_CM3.lib(irq_cm3.o)
    0x0800299c   0x0800299c   0x00000018   Code   RO         1518    .text               c_w.l(__2printf.o)
    0x080029b4   0x080029b4   0x0000002c   Code   RO         1520    .text               c_w.l(__2sprintf.o)
    0x080029e0   0x080029e0   0x0000004e   Code   RO         1528    .text               c_w.l(_printf_pad.o)
    0x08002a2e   0x08002a2e   0x00000002   PAD
    0x08002a30   0x08002a30   0x00000078   Code   RO         1530    .text               c_w.l(_printf_dec.o)
    0x08002aa8   0x08002aa8   0x00000058   Code   RO         1535    .text               c_w.l(_printf_hex_int.o)
    0x08002b00   0x08002b00   0x00000138   Code   RO         1565    .text               c_w.l(__printf_flags_wp.o)
    0x08002c38   0x08002c38   0x0000008a   Code   RO         1576    .text               c_w.l(rt_memcpy_v6.o)
    0x08002cc2   0x08002cc2   0x00000044   Code   RO         1578    .text               c_w.l(rt_memclr.o)
    0x08002d06   0x08002d06   0x0000004e   Code   RO         1580    .text               c_w.l(rt_memclr_w.o)
    0x08002d54   0x08002d54   0x00000080   Code   RO         1582    .text               c_w.l(strcmpv7m.o)
    0x08002dd4   0x08002dd4   0x00000006   Code   RO         1584    .text               c_w.l(heapauxi.o)
    0x08002dda   0x08002dda   0x00000002   PAD
    0x08002ddc   0x08002ddc   0x00000024   Code   RO         1591    .text               c_w.l(init_aeabi.o)
    0x08002e00   0x08002e00   0x000000b2   Code   RO         1707    .text               c_w.l(_printf_intcommon.o)
    0x08002eb2   0x08002eb2   0x00000002   PAD
    0x08002eb4   0x08002eb4   0x00000030   Code   RO         1709    .text               c_w.l(_printf_char_common.o)
    0x08002ee4   0x08002ee4   0x0000000a   Code   RO         1711    .text               c_w.l(_sputc.o)
    0x08002eee   0x08002eee   0x0000000e   Code   RO         1722    .text               c_w.l(defsig_pvfn_outer.o)
    0x08002efc   0x08002efc   0x00000064   Code   RO         1726    .text               c_w.l(rt_memcpy_w.o)
    0x08002f60   0x08002f60   0x000001c8   Code   RO         1820    .text               c_w.l(initio_locked.o)
    0x08003128   0x08003128   0x0000000a   Code   RO         1822    .text               c_w.l(defsig_exit.o)
    0x08003132   0x08003132   0x00000002   PAD
    0x08003134   0x08003134   0x00000030   Code   RO         1824    .text               c_w.l(defsig_pvfn_inner.o)
    0x08003164   0x08003164   0x0000000c   Code   RO         1846    .text               c_w.l(sys_exit.o)
    0x08003170   0x08003170   0x0000004a   Code   RO         1848    .text               c_w.l(sys_stackheap_outer.o)
    0x080031ba   0x080031ba   0x0000009e   Code   RO         1865    .text               c_w.l(h1_alloc_mt.o)
    0x08003258   0x08003258   0x00000076   Code   RO         1867    .text               c_w.l(h1_free_mt.o)
    0x080032ce   0x080032ce   0x000001d6   Code   RO         1919    .text               c_w.l(flsbuf.o)
    0x080034a4   0x080034a4   0x0000004c   Code   RO         1926    .text               c_w.l(fclose.o)
    0x080034f0   0x080034f0   0x00000068   Code   RO         1928    .text               c_w.l(setvbuf_locked.o)
    0x08003558   0x08003558   0x00000144   Code   RO         1930    .text               c_w.l(fopen_locked.o)
    0x0800369c   0x0800369c   0x00000012   Code   RO         1932    .text               c_w.l(exit.o)
    0x080036ae   0x080036ae   0x00000032   Code   RO         1938    .text               c_w.l(defsig_general.o)
    0x080036e0   0x080036e0   0x0000000e   Code   RO         1940    .text               c_w.l(defsig_rtred_outer.o)
    0x080036ee   0x080036ee   0x0000000e   Code   RO         1980    .text               c_w.l(sys_wrch.o)
    0x080036fc   0x080036fc   0x00000008   Code   RO         1984    .text               c_w.l(libspace.o)
    0x08003704   0x08003704   0x00000002   Code   RO         1987    .text               c_w.l(use_no_semi.o)
    0x08003706   0x08003706   0x00000000   Code   RO         1989    .text               c_w.l(indicate_semi.o)
    0x08003706   0x08003706   0x0000000a   Code   RO         1997    .text               c_w.l(rt_heap_descriptor_twolibspace.o)
    0x08003710   0x08003710   0x00000004   Code   RO         1999    .text               c_w.l(hguard.o)
    0x08003714   0x08003714   0x0000008a   Code   RO         2003    .text               c_w.l(init_alloc.o)
    0x0800379e   0x0800379e   0x00000012   Code   RO         2009    .text               c_w.l(h1_init_mt.o)
    0x080037b0   0x080037b0   0x00000040   Code   RO         2021    .text               c_w.l(_printf_char_file_locked.o)
    0x080037f0   0x080037f0   0x000000f8   Code   RO         2023    .text               c_w.l(fseek.o)
    0x080038e8   0x080038e8   0x000000f0   Code   RO         2025    .text               c_w.l(stdio.o)
    0x080039d8   0x080039d8   0x00000034   Code   RO         2037    .text               c_w.l(defsig_rtred_inner.o)
    0x08003a0c   0x08003a0c   0x0000000e   Code   RO         2039    .text               c_w.l(defsig_rtmem_outer.o)
    0x08003a1a   0x08003a1a   0x0000003e   Code   RO         2060    .text               c_w.l(h1_extend_mt.o)
    0x08003a58   0x08003a58   0x00000042   Code   RO         2066    .text               c_w.l(ftell.o)
    0x08003a9a   0x08003a9a   0x00000002   PAD
    0x08003a9c   0x08003a9c   0x00000050   Code   RO         2076    .text               c_w.l(defsig_rtmem_inner.o)
    0x08003aec   0x08003aec   0x00000004   Code   RO         2094    .text               c_w.l(rt_errno_addr_twolibspace.o)
    0x08003af0   0x08003af0   0x00000010   Code   RO         2096    .text               c_w.l(term_alloc.o)
    0x08003b00   0x08003b00   0x0000000a   Code   RO         2103    .text               c_w.l(h1_final_mt.o)
    0x08003b0a   0x08003b0a   0x00000044   Code   RO         1500    .text.MessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08003b4e   0x08003b4e   0x00000062   Code   RO         1494    .text.MessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x08003bb0   0x08003bb0   0x0000001c   Code   RO         1492    .text.MessageQueueRemove  RTX_CM3.lib(rtx_msgqueue.o)
    0x08003bcc   0x08003bcc   0x0000000c   Code   RO         1438    .text.OS_Tick_AcknowledgeIRQ  RTX_CM3.lib(os_systick.o)
    0x08003bd8   0x08003bd8   0x0000002c   Code   RO         1434    .text.OS_Tick_Enable  RTX_CM3.lib(os_systick.o)
    0x08003c04   0x08003c04   0x00000006   Code   RO         1440    .text.OS_Tick_GetIRQn  RTX_CM3.lib(os_systick.o)
    0x08003c0a   0x08003c0a   0x00000002   PAD
    0x08003c0c   0x08003c0c   0x00000040   Code   RO         1432    .text.OS_Tick_Setup  RTX_CM3.lib(os_systick.o)
    0x08003c4c   0x08003c4c   0x0000006a   Code   RO         1198    .text.ThreadFlagsCheck  RTX_CM3.lib(rtx_thread.o)
    0x08003cb6   0x08003cb6   0x00000002   PAD
    0x08003cb8   0x08003cb8   0x00000050   Code   RO         1324    .text.TimerInsert   RTX_CM3.lib(rtx_timer.o)
    0x08003d08   0x08003d08   0x00000024   Code   RO         1251    .text.osDelay       RTX_CM3.lib(rtx_delay.o)
    0x08003d2c   0x08003d2c   0x00000030   Code   RO         1061    .text.osKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x08003d5c   0x08003d5c   0x0000002c   Code   RO         1055    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x08003d88   0x08003d88   0x00000024   Code   RO         1065    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x08003dac   0x08003dac   0x0000006c   Code   RO         1466    .text.osMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08003e18   0x08003e18   0x00000024   Code   RO         1460    .text.osMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x08003e3c   0x08003e3c   0x00000078   Code   RO         1464    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x08003eb4   0x08003eb4   0x00000024   Code   RO         1274    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x08003ed8   0x08003ed8   0x00000024   Code   RO         1280    .text.osMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x08003efc   0x08003efc   0x00000024   Code   RO         1270    .text.osMutexNew    RTX_CM3.lib(rtx_mutex.o)
    0x08003f20   0x08003f20   0x00000024   Code   RO         1276    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08003f44   0x08003f44   0x00000002   Code   RO         1053    .text.osRtxKernelPreInit  RTX_CM3.lib(rtx_kernel.o)
    0x08003f46   0x08003f46   0x00000080   Code   RO         1351    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x08003fc6   0x08003fc6   0x00000052   Code   RO         1353    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x08004018   0x08004018   0x00000036   Code   RO         1349    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x0800404e   0x0800404e   0x0000003a   Code   RO         1366    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x08004088   0x08004088   0x0000004a   Code   RO         1368    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x080040d2   0x080040d2   0x00000046   Code   RO         1364    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x08004118   0x08004118   0x000000ba   Code   RO         1490    .text.osRtxMessageQueuePostProcess  RTX_CM3.lib(rtx_msgqueue.o)
    0x080041d2   0x080041d2   0x0000004a   Code   RO         1268    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x0800421c   0x0800421c   0x00000090   Code   RO         1419    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x080042ac   0x080042ac   0x00000074   Code   RO         1421    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x08004320   0x08004320   0x00000038   Code   RO         1138    .text.osRtxThreadBlock  RTX_CM3.lib(rtx_thread.o)
    0x08004358   0x08004358   0x00000088   Code   RO         1146    .text.osRtxThreadDelayInsert  RTX_CM3.lib(rtx_thread.o)
    0x080043e0   0x080043e0   0x0000003c   Code   RO         1142    .text.osRtxThreadDelayRemove  RTX_CM3.lib(rtx_thread.o)
    0x0800441c   0x0800441c   0x00000034   Code   RO         1128    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x08004450   0x08004450   0x0000005c   Code   RO         1136    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x080044ac   0x080044ac   0x00000058   Code   RO         1222    .text.osRtxThreadFree  RTX_CM3.lib(rtx_thread.o)
    0x08004504   0x08004504   0x00000014   Code   RO         1120    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x08004518   0x08004518   0x0000002a   Code   RO         1118    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x08004542   0x08004542   0x00000014   Code   RO         1124    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x08004556   0x08004556   0x00000028   Code   RO         1122    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x0800457e   0x0800457e   0x0000002a   Code   RO         1196    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x080045a8   0x080045a8   0x00000014   Code   RO         1126    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x080045bc   0x080045bc   0x00000006   Code   RO         1130    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x080045c2   0x080045c2   0x00000002   PAD
    0x080045c4   0x080045c4   0x00000028   Code   RO         1134    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x080045ec   0x080045ec   0x00000040   Code   RO         1148    .text.osRtxThreadStartup  RTX_CM3.lib(rtx_thread.o)
    0x0800462c   0x0800462c   0x00000010   Code   RO         1132    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x0800463c   0x0800463c   0x0000003c   Code   RO         1144    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x08004678   0x08004678   0x00000024   Code   RO         1140    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x0800469c   0x0800469c   0x00000070   Code   RO         1417    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x0800470c   0x0800470c   0x0000003c   Code   RO         1308    .text.osRtxTimerThread  RTX_CM3.lib(rtx_timer.o)
    0x08004748   0x08004748   0x00000058   Code   RO         1310    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x080047a0   0x080047a0   0x0000000c   Code   RO         1180    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x080047ac   0x080047ac   0x00000058   Code   RO         1188    .text.osThreadFlagsSet  RTX_CM3.lib(rtx_thread.o)
    0x08004804   0x08004804   0x00000024   Code   RO         1194    .text.osThreadFlagsWait  RTX_CM3.lib(rtx_thread.o)
    0x08004828   0x08004828   0x00000028   Code   RO         1156    .text.osThreadGetId  RTX_CM3.lib(rtx_thread.o)
    0x08004850   0x08004850   0x00000024   Code   RO         1152    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x08004874   0x08004874   0x00000014   Code   RO         1255    .text.svcRtxDelay   RTX_CM3.lib(rtx_delay.o)
    0x08004888   0x08004888   0x0000000c   Code   RO         1063    .text.svcRtxKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x08004894   0x08004894   0x00000154   Code   RO         1093    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x080049e8   0x080049e8   0x00000088   Code   RO         1095    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x08004a70   0x08004a70   0x000000e0   Code   RO         1502    .text.svcRtxMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08004b50   0x08004b50   0x00000134   Code   RO         1488    .text.svcRtxMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x08004c84   0x08004c84   0x000000c0   Code   RO         1498    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x08004d44   0x08004d44   0x00000090   Code   RO         1286    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x08004dd4   0x08004dd4   0x000000c4   Code   RO         1292    .text.svcRtxMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x08004e98   0x08004e98   0x0000006c   Code   RO         1282    .text.svcRtxMutexNew  RTX_CM3.lib(rtx_mutex.o)
    0x08004f04   0x08004f04   0x000000b8   Code   RO         1288    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08004fbc   0x08004fbc   0x00000070   Code   RO         1226    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x0800502c   0x0800502c   0x00000066   Code   RO         1234    .text.svcRtxThreadFlagsSet  RTX_CM3.lib(rtx_thread.o)
    0x08005092   0x08005092   0x00000002   PAD
    0x08005094   0x08005094   0x0000004c   Code   RO         1240    .text.svcRtxThreadFlagsWait  RTX_CM3.lib(rtx_thread.o)
    0x080050e0   0x080050e0   0x0000000c   Code   RO         1158    .text.svcRtxThreadGetId  RTX_CM3.lib(rtx_thread.o)
    0x080050ec   0x080050ec   0x000001dc   Code   RO         1150    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x080052c8   0x080052c8   0x0000000e   Code   RO          616    i._ZN13STM_UART_INFO10checkTXCPLEv  stm32uart.o
    0x080052d6   0x080052d6   0x000000e6   Code   RO          569    i._ZN13STM_UART_INFO12usart_handleEv  stm32uart.o
    0x080053bc   0x080053bc   0x0000001a   Code   RO          609    i._ZN13STM_UART_INFO13wait_send_endEv  stm32uart.o
    0x080053d6   0x080053d6   0x0000002e   Code   RO          596    i._ZN13STM_UART_INFO4receEPhj  stm32uart.o
    0x08005404   0x08005404   0x0000002e   Code   RO          590    i._ZN13STM_UART_INFO4sendEPhj  stm32uart.o
    0x08005432   0x08005432   0x00000006   Code   RO          634    i._ZN13STM_UART_INFO6stopRXEv  stm32uart.o
    0x08005438   0x08005438   0x00000006   Code   RO          640    i._ZN13STM_UART_INFO8GetRxNumEv  stm32uart.o
    0x0800543e   0x0800543e   0x00000068   Code   RO          602    i._ZN13STM_UART_INFO9wait_receEjj  stm32uart.o
    0x080054a6   0x080054a6   0x00000002   PAD
    0x080054a8   0x080054a8   0x00000028   Code   RO          576    i._ZN13STM_UART_INFOC1ER13USART_TypeDef  stm32uart.o
    0x080054d0   0x080054d0   0x00000006   Code   RO          217    i._ZN20sbwt_modbus_reactorf4codeEv  sbwt_modbus.o
    0x080054d6   0x080054d6   0x0000009c   Code   RO          223    i._ZN20sbwt_modbus_reactorf7prodataEPhiS0_j  sbwt_modbus.o
    0x08005572   0x08005572   0x00000010   Code   RO          871    i._ZN9SBWT_INFO4initEP9UART_INFOjP16SBWT_BUFF_STRUCT  dmt.o
    0x08005582   0x08005582   0x0000001c   Code   RO          777    i._ZN9SBWT_INFO7GetDataEi  display.o
    0x0800559e   0x0800559e   0x00000010   Code   RO          735    i._ZN9SBWT_INFO8getAliveEv  sbwt_work.o
    0x080055ae   0x080055ae   0x00000006   Code   RO          139    i._ZN9SBWT_INFOC1Ev  ebyte_lora.o
    0x080055b4   0x080055b4   0x00000024   Code   RO         1703    i.__aeabi_vec_ctor_nocookie_nodtor  cpprt_w.l(aeabi_vec_ctor_nocookie_nodtor.o)
    0x080055d8   0x080055d8   0x00000006   Code   RO         1594    i.__cxa_pure_virtual  cpprt_w.l(pure_virt.o)
    0x080055de   0x080055de   0x0000000e   Code   RO         1563    i._is_digit         c_w.l(__printf_wp.o)
    0x080055ec   0x080055ec   0x0000001a   Code   RO         1811    i.fputc             c_w.l(fputc.o)
    0x08005606   0x08005606   0x00000200   Data   RO          248    .constdata          mbcrc.o
    0x08005806   0x08005806   0x00000002   PAD
    0x08005808   0x08005808   0x00000010   Data   RO          663    .constdata          sbwt_app.o
    0x08005818   0x08005818   0x0000003c   Data   RO          691    .constdata          sbwt_transfer.o
    0x08005854   0x08005854   0x00000010   Data   RO          765    .constdata          display.o
    0x08005864   0x08005864   0x00000064   Data   RO          956    .constdata          rtx_lib.o
    0x080058c8   0x080058c8   0x00000017   Data   RO          996    .constdata          retarget_io.o
    0x080058df   0x080058df   0x00000001   PAD
    0x080058e0   0x080058e0   0x00000001   Data   RO         1302    .constdata          RTX_CM3.lib(irq_cm3.o)
    0x080058e1   0x080058e1   0x00000028   Data   RO         1536    .constdata          c_w.l(_printf_hex_int.o)
    0x08005909   0x08005909   0x00000011   Data   RO         1566    .constdata          c_w.l(__printf_flags_wp.o)
    0x0800591a   0x0800591a   0x00000002   PAD
    0x0800591c   0x0800591c   0x0000000c   Data   RO          174    .constdata__ZTV10ModBus_RTU  mymodbus.o
    0x08005928   0x08005928   0x00000010   Data   RO          210    .constdata__ZTV13ModBus_rector  sbwt_modbus.o
    0x08005938   0x08005938   0x00000034   Data   RO          585    .constdata__ZTV13STM_UART_INFO  stm32uart.o
    0x0800596c   0x0800596c   0x00000010   Data   RO          212    .constdata__ZTV20sbwt_modbus_reactorf  sbwt_modbus.o
    0x0800597c   0x0800597c   0x0000000c   Data   RO          208    .constdata__ZTV8myModBus  sbwt_modbus.o
    0x08005988   0x08005988   0x00000034   Data   RO          583    .constdata__ZTV9UART_INFO  stm32uart.o
    0x080059bc   0x080059bc   0x000000a0   Data   RO          958    .rodata             rtx_lib.o
    0x08005a5c   0x08005a5c   0x0000000b   Data   RO         1107    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x08005a67   0x08005a67   0x00000001   PAD
    0x08005a68   0x08005a68   0x00000020   Data   RO         2105    Region$$Table       anon$$obj.o
    0x08005a88   0x08005a88   0x00000004   Data   RO          128    .init_array         ebyte_lora.o
    0x08005a8c   0x08005a88   0x00000004   Data   RO          196    .init_array         sbwt_modbus.o
    0x08005a90   0x08005a88   0x00000004   Data   RO          558    .init_array         stm32uart.o
    0x08005a94   0x08005a88   0x00000004   Data   RO          724    .init_array         sbwt_work.o
    0x08005a98   0x08005a88   0x00000004   Data   RO          766    .init_array         display.o
    0x08005a9c   0x08005a88   0x00000000   Data   RO         1589    .init_array         c_w.l(init_aeabi.o)


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08005a9c, Size: 0x00003fa8, Max: 0x00010000, ABSOLUTE, COMPRESSED[0x00000094])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00001040   Data   RW          950    .bss.os             rtx_lib.o
    0x20001040   COMPRESSED   0x000001f0   Data   RW          951    .bss.os.libspace    rtx_lib.o
    0x20001230   COMPRESSED   0x00000034   Data   RW          952    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001264   COMPRESSED   0x00000050   Data   RW          953    .bss.os.msgqueue.mem  rtx_lib.o
    0x200012b4   COMPRESSED   0x00000088   Data   RW          954    .bss.os.thread.cb   rtx_lib.o
    0x2000133c   COMPRESSED   0x00000004   PAD
    0x20001340   COMPRESSED   0x00000500   Data   RW          955    .bss.os.thread.stack  rtx_lib.o
    0x20001840   COMPRESSED   0x00000010   Data   RW          127    .data               ebyte_lora.o
    0x20001850   COMPRESSED   0x00000004   Data   RW          195    .data               sbwt_modbus.o
    0x20001854   COMPRESSED   0x00000014   Data   RW          469    .data               stm32f10x_rcc.o
    0x20001868   COMPRESSED   0x00000028   Data   RW          557    .data               stm32uart.o
    0x20001890   COMPRESSED   0x00000010   Data   RW          723    .data               sbwt_work.o
    0x200018a0   COMPRESSED   0x00000005   Data   RW          957    .data               rtx_lib.o
    0x200018a5   COMPRESSED   0x00000003   PAD
    0x200018a8   COMPRESSED   0x00000004   Data   RW          997    .data               retarget_io.o
    0x200018ac   COMPRESSED   0x00000014   Data   RW         1035    .data               system_stm32f10x.o
    0x200018c0   COMPRESSED   0x00000004   Data   RW         1719    .data               c_w.l(stdio_streams.o)
    0x200018c4   COMPRESSED   0x00000004   Data   RW         1720    .data               c_w.l(stdio_streams.o)
    0x200018c8   COMPRESSED   0x00000004   Data   RW         1721    .data               c_w.l(stdio_streams.o)
    0x200018cc   COMPRESSED   0x00000004   Data   RW         1923    .data               c_w.l(streamlock.o)
    0x200018d0   COMPRESSED   0x000000a4   Data   RW         1108    .data.os            RTX_CM3.lib(rtx_kernel.o)
    0x20001974   COMPRESSED   0x00000004   PAD
    0x20001978        -       0x000005b4   Zero   RW          126    .bss                ebyte_lora.o
    0x20001f2c   COMPRESSED   0x00000004   PAD
    0x20001f30        -       0x00000200   Zero   RW          194    .bss                sbwt_modbus.o
    0x20002130        -       0x000000f0   Zero   RW          556    .bss                stm32uart.o
    0x20002220        -       0x00000bd0   Zero   RW          722    .bss                sbwt_work.o
    0x20002df0        -       0x00000458   Zero   RW          764    .bss                display.o
    0x20003248        -       0x00000200   Zero   RW          861    .bss                dmt.o
    0x20003448        -       0x00000054   Zero   RW         1716    .bss                c_w.l(stdio_streams.o)
    0x2000349c        -       0x00000054   Zero   RW         1717    .bss                c_w.l(stdio_streams.o)
    0x200034f0        -       0x00000054   Zero   RW         1718    .bss                c_w.l(stdio_streams.o)
    0x20003544        -       0x00000060   Zero   RW         1985    .bss                c_w.l(libspace.o)
    0x200035a4        -       0x00000001   Zero   RW         1450    .bss.PendST         RTX_CM3.lib(os_systick.o)
    0x200035a5   COMPRESSED   0x00000003   PAD
    0x200035a8        -       0x00000200   Zero   RW         1028    HEAP                startup_stm32f10x_hd.o
    0x200037a8        -       0x00000800   Zero   RW         1027    STACK               startup_stm32f10x_hd.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       636         54         20          0       1112      12277   display.o
       712          4          0          0        512       7711   dmt.o
       620          0          0          0          0       6901   dmt_uart.o
       374         26          4         16       1460       7312   ebyte_lora.o
       106          0          0          0          0     228880   main.o
        56          8        512          0          0       5732   mbcrc.o
       220         22          0          0          0     229301   misc.o
       316          0         12          0          0       3668   mymodbus.o
       468         38         23          4          0       4468   retarget_io.o
        36          6          0          0          0       4295   rtx_config.o
       216         14        260       6209          0      10756   rtx_lib.o
       244         42         16          0          0       4268   sbwt_app.o
       290         24         48          4        512       6822   sbwt_modbus.o
      1148         24         60          0          0       7587   sbwt_transfer.o
       336         18          4         16       3024      10910   sbwt_work.o
        64         26        304          0       2560        788   startup_stm32f10x_hd.o
       860         38          0          0          0       5601   stm32f10x_gpio.o
       932         36          0         20          0       8728   stm32f10x_rcc.o
      1032         22          0          0          0       8324   stm32f10x_usart.o
      1530         70        108         40        240       9843   stm32uart.o
       480         38          0         20          0       1735   system_stm32f10x.o

    ----------------------------------------------------------------------
     10680        510       1406       6336       9424     585907   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         4          0          3          7          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       148         10          1          0          0        484   irq_cm3.o
       126         32          0          0          1       3108   os_systick.o
        56          4          0          0          0       2838   rtx_delay.o
       618         48         11        164          0      17132   rtx_kernel.o
       264          0          0          0          0       2403   rtx_memory.o
       202          0          0          0          0      16408   rtx_mempool.o
      1368         28          0          0          0      18781   rtx_msgqueue.o
       850         32          0          0          0       9465   rtx_mutex.o
       372         26          0          0          0       5417   rtx_system.o
      1986        116          0          0          0      32225   rtx_thread.o
       228         20          0          0          0      10252   rtx_timer.o
        24          4          0          0          0         84   __2printf.o
        44          6          0          0          0         84   __2sprintf.o
        90          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
       312          4         17          0          0         92   __printf_flags_wp.o
        14          0          0          0          0         68   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        48          6          0          0          0         96   _printf_char_common.o
        64          6          0          0          0         84   _printf_char_file_locked.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
        88          4         40          0          0         88   _printf_hex_int.o
       178          0          0          0          0         88   _printf_intcommon.o
        78          0          0          0          0        108   _printf_pad.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
         6          0          0          0          0          0   _printf_x.o
        10          0          0          0          0         68   _sputc.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        48         34          0          0          0         76   defsig_pvfn_inner.o
        14          0          0          0          0         80   defsig_pvfn_outer.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        52         38          0          0          0         76   defsig_rtred_inner.o
        14          0          0          0          0         80   defsig_rtred_outer.o
        18          0          0          0          0         80   exit.o
        76          0          0          0          0         88   fclose.o
       470          0          0          0          0         88   flsbuf.o
       324          8          0          0          0        152   fopen_locked.o
        26          0          0          0          0         68   fputc.o
       248          6          0          0          0         84   fseek.o
        66          0          0          0          0         76   ftell.o
       158          0          0          0          0        128   h1_alloc_mt.o
        62          0          0          0          0         80   h1_extend_mt.o
        10          0          0          0          0         76   h1_final_mt.o
       118          0          0          0          0        108   h1_free_mt.o
        18          0          0          0          0         84   h1_init_mt.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
        36         10          0          0          0         80   init_aeabi.o
       138          0          0          0          0        168   init_alloc.o
       456         48          0          0          0        116   initio_locked.o
         2          0          0          0          0          0   libinit.o
        18          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
        10          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         0          0          0          0          0          0   maybetermalloc2.o
         4          0          0          0          0         68   rt_errno_addr_twolibspace.o
        10          0          0          0          0         76   rt_heap_descriptor_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       104          0          0          0          0         88   setvbuf_locked.o
       240          6          0          0          0        156   stdio.o
         0          0          0         12        252          0   stdio_streams.o
       128          0          0          0          0         68   strcmpv7m.o
         0          0          0          4          0          0   streamlock.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
        16          0          0          0          0         80   term_alloc.o
         2          0          0          0          0         68   use_no_semi.o
        36          0          0          0          0         84   aeabi_vec_ctor_nocookie_nodtor.o
         6          0          0          0          0         68   pure_virt.o

    ----------------------------------------------------------------------
     11038        586         72        180        356     123265   Library Totals
        22          0          3          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6218        316         12        164          1     118513   RTX_CM3.lib
      4756        270         57         16        348       4600   c_w.l
        42          0          0          0          0        152   cpprt_w.l

    ----------------------------------------------------------------------
     11038        586         72        180        356     123265   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     21718       1096       1478       6516       9780     704188   Grand Totals
     21718       1096       1478        148       9780     704188   ELF Image Totals (compressed)
     21718       1096       1478        148          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                23196 (  22.65kB)
    Total RW  Size (RW Data + ZI Data)             16296 (  15.91kB)
    Total ROM Size (Code + RO Data + RW Data)      23344 (  22.80kB)

==============================================================================

